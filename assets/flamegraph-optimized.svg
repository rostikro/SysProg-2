<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="806" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="789.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="789.00"> </text><svg id="frames" x="10" width="1180" total_samples="612838499"><g><title>_dl_start_user (1,003,009 samples, 0.16%)</title><rect x="0.0000%" y="725" width="0.1637%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1003009"/><text x="0.2500%" y="735.50"></text></g><g><title>_dl_init (1,003,009 samples, 0.16%)</title><rect x="0.0000%" y="709" width="0.1637%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1003009"/><text x="0.2500%" y="719.50"></text></g><g><title>call_init (1,003,009 samples, 0.16%)</title><rect x="0.0000%" y="693" width="0.1637%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1003009"/><text x="0.2500%" y="703.50"></text></g><g><title>call_init (1,003,009 samples, 0.16%)</title><rect x="0.0000%" y="677" width="0.1637%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1003009"/><text x="0.2500%" y="687.50"></text></g><g><title>__cpu_indicator_init (1,003,009 samples, 0.16%)</title><rect x="0.0000%" y="661" width="0.1637%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1003009"/><text x="0.2500%" y="671.50"></text></g><g><title>__libc_start_main_impl (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="709" width="0.1637%" height="15" fill="rgb(232,128,0)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="719.50"></text></g><g><title>__libc_start_call_main (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="693" width="0.1637%" height="15" fill="rgb(207,160,47)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="703.50"></text></g><g><title>main (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="677" width="0.1637%" height="15" fill="rgb(228,23,34)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="687.50"></text></g><g><title>std::rt::lang_start_internal (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="661" width="0.1637%" height="15" fill="rgb(218,30,26)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="671.50"></text></g><g><title>std::panic::catch_unwind (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="645" width="0.1637%" height="15" fill="rgb(220,122,19)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="655.50"></text></g><g><title>std::panicking::try (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="629" width="0.1637%" height="15" fill="rgb(250,228,42)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="639.50"></text></g><g><title>std::panicking::try::do_call (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="613" width="0.1637%" height="15" fill="rgb(240,193,28)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="623.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="597" width="0.1637%" height="15" fill="rgb(216,20,37)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="607.50"></text></g><g><title>std::panic::catch_unwind (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="581" width="0.1637%" height="15" fill="rgb(206,188,39)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="591.50"></text></g><g><title>std::panicking::try (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="565" width="0.1637%" height="15" fill="rgb(217,207,13)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="575.50"></text></g><g><title>std::panicking::try::do_call (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="549" width="0.1637%" height="15" fill="rgb(231,73,38)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="533" width="0.1637%" height="15" fill="rgb(225,20,46)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="543.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="517" width="0.1637%" height="15" fill="rgb(210,31,41)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="527.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="501" width="0.1637%" height="15" fill="rgb(221,200,47)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="485" width="0.1637%" height="15" fill="rgb(226,26,5)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="495.50"></text></g><g><title>rsa_key::main (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="469" width="0.1637%" height="15" fill="rgb(249,33,26)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="479.50"></text></g><g><title>std::thread::spawn (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="453" width="0.1637%" height="15" fill="rgb(235,183,28)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="463.50"></text></g><g><title>std::thread::Builder::spawn (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="437" width="0.1637%" height="15" fill="rgb(221,5,38)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="447.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="421" width="0.1637%" height="15" fill="rgb(247,18,42)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="431.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="405" width="0.1637%" height="15" fill="rgb(241,131,45)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="415.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="389" width="0.1637%" height="15" fill="rgb(249,31,29)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="399.50"></text></g><g><title>__pthread_create_2_1 (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="373" width="0.1637%" height="15" fill="rgb(225,111,53)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="383.50"></text></g><g><title>create_thread (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="357" width="0.1637%" height="15" fill="rgb(238,160,17)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="367.50"></text></g><g><title>clone3 (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="341" width="0.1637%" height="15" fill="rgb(214,148,48)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="325" width="0.1637%" height="15" fill="rgb(232,36,49)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="335.50"></text></g><g><title>do_syscall_64 (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="309" width="0.1637%" height="15" fill="rgb(209,103,24)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="319.50"></text></g><g><title>x64_sys_call (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="293" width="0.1637%" height="15" fill="rgb(229,88,8)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="303.50"></text></g><g><title>__x64_sys_clone3 (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="277" width="0.1637%" height="15" fill="rgb(213,181,19)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="287.50"></text></g><g><title>__do_sys_clone3 (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="261" width="0.1637%" height="15" fill="rgb(254,191,54)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="271.50"></text></g><g><title>kernel_clone (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="245" width="0.1637%" height="15" fill="rgb(241,83,37)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="255.50"></text></g><g><title>wake_up_new_task (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="229" width="0.1637%" height="15" fill="rgb(233,36,39)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="239.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1,003,009 samples, 0.16%)</title><rect x="0.1637%" y="213" width="0.1637%" height="15" fill="rgb(226,3,54)" fg:x="1003009" fg:w="1003009"/><text x="0.4137%" y="223.50"></text></g><g><title>dl_init_cacheinfo (2,006,018 samples, 0.33%)</title><rect x="0.3273%" y="629" width="0.3273%" height="15" fill="rgb(245,192,40)" fg:x="2006018" fg:w="2006018"/><text x="0.5773%" y="639.50"></text></g><g><title>handle_intel (2,006,018 samples, 0.33%)</title><rect x="0.3273%" y="613" width="0.3273%" height="15" fill="rgb(238,167,29)" fg:x="2006018" fg:w="2006018"/><text x="0.5773%" y="623.50"></text></g><g><title>_start (4,012,036 samples, 0.65%)</title><rect x="0.1637%" y="725" width="0.6547%" height="15" fill="rgb(232,182,51)" fg:x="1003009" fg:w="4012036"/><text x="0.4137%" y="735.50"></text></g><g><title>_dl_start (3,009,027 samples, 0.49%)</title><rect x="0.3273%" y="709" width="0.4910%" height="15" fill="rgb(231,60,39)" fg:x="2006018" fg:w="3009027"/><text x="0.5773%" y="719.50"></text></g><g><title>_dl_start_final (3,009,027 samples, 0.49%)</title><rect x="0.3273%" y="693" width="0.4910%" height="15" fill="rgb(208,69,12)" fg:x="2006018" fg:w="3009027"/><text x="0.5773%" y="703.50"></text></g><g><title>_dl_sysdep_start (3,009,027 samples, 0.49%)</title><rect x="0.3273%" y="677" width="0.4910%" height="15" fill="rgb(235,93,37)" fg:x="2006018" fg:w="3009027"/><text x="0.5773%" y="687.50"></text></g><g><title>dl_platform_init (3,009,027 samples, 0.49%)</title><rect x="0.3273%" y="661" width="0.4910%" height="15" fill="rgb(213,116,39)" fg:x="2006018" fg:w="3009027"/><text x="0.5773%" y="671.50"></text></g><g><title>init_cpu_features (3,009,027 samples, 0.49%)</title><rect x="0.3273%" y="645" width="0.4910%" height="15" fill="rgb(222,207,29)" fg:x="2006018" fg:w="3009027"/><text x="0.5773%" y="655.50"></text></g><g><title>get_common_indices (1,003,009 samples, 0.16%)</title><rect x="0.6547%" y="629" width="0.1637%" height="15" fill="rgb(206,96,30)" fg:x="4012036" fg:w="1003009"/><text x="0.9047%" y="639.50"></text></g><g><title>asm_sysvec_call_function_single (1,003,009 samples, 0.16%)</title><rect x="0.6547%" y="613" width="0.1637%" height="15" fill="rgb(218,138,4)" fg:x="4012036" fg:w="1003009"/><text x="0.9047%" y="623.50"></text></g><g><title>sysvec_call_function_single (1,003,009 samples, 0.16%)</title><rect x="0.6547%" y="597" width="0.1637%" height="15" fill="rgb(250,191,14)" fg:x="4012036" fg:w="1003009"/><text x="0.9047%" y="607.50"></text></g><g><title>irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="0.6547%" y="581" width="0.1637%" height="15" fill="rgb(239,60,40)" fg:x="4012036" fg:w="1003009"/><text x="0.9047%" y="591.50"></text></g><g><title>__irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="0.6547%" y="565" width="0.1637%" height="15" fill="rgb(206,27,48)" fg:x="4012036" fg:w="1003009"/><text x="0.9047%" y="575.50"></text></g><g><title>handle_softirqs (1,003,009 samples, 0.16%)</title><rect x="0.6547%" y="549" width="0.1637%" height="15" fill="rgb(225,35,8)" fg:x="4012036" fg:w="1003009"/><text x="0.9047%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,003,009 samples, 0.16%)</title><rect x="0.8183%" y="693" width="0.1637%" height="15" fill="rgb(250,213,24)" fg:x="5015045" fg:w="1003009"/><text x="1.0683%" y="703.50"></text></g><g><title>do_syscall_64 (1,003,009 samples, 0.16%)</title><rect x="0.8183%" y="677" width="0.1637%" height="15" fill="rgb(247,123,22)" fg:x="5015045" fg:w="1003009"/><text x="1.0683%" y="687.50"></text></g><g><title>x64_sys_call (1,003,009 samples, 0.16%)</title><rect x="0.8183%" y="661" width="0.1637%" height="15" fill="rgb(231,138,38)" fg:x="5015045" fg:w="1003009"/><text x="1.0683%" y="671.50"></text></g><g><title>__x64_sys_exit (1,003,009 samples, 0.16%)</title><rect x="0.8183%" y="645" width="0.1637%" height="15" fill="rgb(231,145,46)" fg:x="5015045" fg:w="1003009"/><text x="1.0683%" y="655.50"></text></g><g><title>do_exit (1,003,009 samples, 0.16%)</title><rect x="0.8183%" y="629" width="0.1637%" height="15" fill="rgb(251,118,11)" fg:x="5015045" fg:w="1003009"/><text x="1.0683%" y="639.50"></text></g><g><title>exit_mm (1,003,009 samples, 0.16%)</title><rect x="0.8183%" y="613" width="0.1637%" height="15" fill="rgb(217,147,25)" fg:x="5015045" fg:w="1003009"/><text x="1.0683%" y="623.50"></text></g><g><title>exit_mm_release (1,003,009 samples, 0.16%)</title><rect x="0.8183%" y="597" width="0.1637%" height="15" fill="rgb(247,81,37)" fg:x="5015045" fg:w="1003009"/><text x="1.0683%" y="607.50"></text></g><g><title>mm_release (1,003,009 samples, 0.16%)</title><rect x="0.8183%" y="581" width="0.1637%" height="15" fill="rgb(209,12,38)" fg:x="5015045" fg:w="1003009"/><text x="1.0683%" y="591.50"></text></g><g><title>do_futex (1,003,009 samples, 0.16%)</title><rect x="0.8183%" y="565" width="0.1637%" height="15" fill="rgb(227,1,9)" fg:x="5015045" fg:w="1003009"/><text x="1.0683%" y="575.50"></text></g><g><title>futex_wake (1,003,009 samples, 0.16%)</title><rect x="0.8183%" y="549" width="0.1637%" height="15" fill="rgb(248,47,43)" fg:x="5015045" fg:w="1003009"/><text x="1.0683%" y="559.50"></text></g><g><title>wake_up_q (1,003,009 samples, 0.16%)</title><rect x="0.8183%" y="533" width="0.1637%" height="15" fill="rgb(221,10,30)" fg:x="5015045" fg:w="1003009"/><text x="1.0683%" y="543.50"></text></g><g><title>try_to_wake_up (1,003,009 samples, 0.16%)</title><rect x="0.8183%" y="517" width="0.1637%" height="15" fill="rgb(210,229,1)" fg:x="5015045" fg:w="1003009"/><text x="1.0683%" y="527.50"></text></g><g><title>_raw_spin_unlock_irqrestore (1,003,009 samples, 0.16%)</title><rect x="0.8183%" y="501" width="0.1637%" height="15" fill="rgb(222,148,37)" fg:x="5015045" fg:w="1003009"/><text x="1.0683%" y="511.50"></text></g><g><title>num_bigint_dig::prime::probably_prime_lucas (2,006,018 samples, 0.33%)</title><rect x="0.9820%" y="405" width="0.3273%" height="15" fill="rgb(234,67,33)" fg:x="6018054" fg:w="2006018"/><text x="1.2320%" y="415.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (2,006,018 samples, 0.33%)</title><rect x="0.9820%" y="389" width="0.3273%" height="15" fill="rgb(247,98,35)" fg:x="6018054" fg:w="2006018"/><text x="1.2320%" y="399.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (2,006,018 samples, 0.33%)</title><rect x="0.9820%" y="373" width="0.3273%" height="15" fill="rgb(247,138,52)" fg:x="6018054" fg:w="2006018"/><text x="1.2320%" y="383.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (2,006,018 samples, 0.33%)</title><rect x="0.9820%" y="357" width="0.3273%" height="15" fill="rgb(213,79,30)" fg:x="6018054" fg:w="2006018"/><text x="1.2320%" y="367.50"></text></g><g><title>num_bigint_dig::algorithms::cmp::cmp_slice (1,003,009 samples, 0.16%)</title><rect x="1.1457%" y="341" width="0.1637%" height="15" fill="rgb(246,177,23)" fg:x="7021063" fg:w="1003009"/><text x="1.3957%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.33%)</title><rect x="1.4730%" y="325" width="0.3273%" height="15" fill="rgb(230,62,27)" fg:x="9027081" fg:w="2006018"/><text x="1.7230%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2,006,018 samples, 0.33%)</title><rect x="1.4730%" y="309" width="0.3273%" height="15" fill="rgb(216,154,8)" fg:x="9027081" fg:w="2006018"/><text x="1.7230%" y="319.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (8,024,072 samples, 1.31%)</title><rect x="1.4730%" y="341" width="1.3093%" height="15" fill="rgb(244,35,45)" fg:x="9027081" fg:w="8024072"/><text x="1.7230%" y="351.50"></text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (6,018,054 samples, 0.98%)</title><rect x="1.8003%" y="325" width="0.9820%" height="15" fill="rgb(251,115,12)" fg:x="11033099" fg:w="6018054"/><text x="2.0503%" y="335.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (11,033,099 samples, 1.80%)</title><rect x="1.3093%" y="389" width="1.8003%" height="15" fill="rgb(240,54,50)" fg:x="8024072" fg:w="11033099"/><text x="1.5593%" y="399.50">n..</text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (11,033,099 samples, 1.80%)</title><rect x="1.3093%" y="373" width="1.8003%" height="15" fill="rgb(233,84,52)" fg:x="8024072" fg:w="11033099"/><text x="1.5593%" y="383.50">n..</text></g><g><title>num_bigint_dig::biguint::monty::montgomery (11,033,099 samples, 1.80%)</title><rect x="1.3093%" y="357" width="1.8003%" height="15" fill="rgb(207,117,47)" fg:x="8024072" fg:w="11033099"/><text x="1.5593%" y="367.50">n..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::resize (2,006,018 samples, 0.33%)</title><rect x="2.7823%" y="341" width="0.3273%" height="15" fill="rgb(249,43,39)" fg:x="17051153" fg:w="2006018"/><text x="3.0323%" y="351.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (2,006,018 samples, 0.33%)</title><rect x="2.7823%" y="325" width="0.3273%" height="15" fill="rgb(209,38,44)" fg:x="17051153" fg:w="2006018"/><text x="3.0323%" y="335.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (1,003,009 samples, 0.16%)</title><rect x="2.9460%" y="309" width="0.1637%" height="15" fill="rgb(236,212,23)" fg:x="18054162" fg:w="1003009"/><text x="3.1960%" y="319.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (1,003,009 samples, 0.16%)</title><rect x="2.9460%" y="293" width="0.1637%" height="15" fill="rgb(242,79,21)" fg:x="18054162" fg:w="1003009"/><text x="3.1960%" y="303.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_grow (1,003,009 samples, 0.16%)</title><rect x="2.9460%" y="277" width="0.1637%" height="15" fill="rgb(211,96,35)" fg:x="18054162" fg:w="1003009"/><text x="3.1960%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1,003,009 samples, 0.16%)</title><rect x="2.9460%" y="261" width="0.1637%" height="15" fill="rgb(253,215,40)" fg:x="18054162" fg:w="1003009"/><text x="3.1960%" y="271.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.16%)</title><rect x="2.9460%" y="245" width="0.1637%" height="15" fill="rgb(211,81,21)" fg:x="18054162" fg:w="1003009"/><text x="3.1960%" y="255.50"></text></g><g><title>_int_malloc (1,003,009 samples, 0.16%)</title><rect x="2.9460%" y="229" width="0.1637%" height="15" fill="rgb(208,190,38)" fg:x="18054162" fg:w="1003009"/><text x="3.1960%" y="239.50"></text></g><g><title>rsa_key::rsa_key_1024 (14,042,126 samples, 2.29%)</title><rect x="0.9820%" y="501" width="2.2913%" height="15" fill="rgb(235,213,38)" fg:x="6018054" fg:w="14042126"/><text x="1.2320%" y="511.50">r..</text></g><g><title>rsa::key::RsaPrivateKey::new (14,042,126 samples, 2.29%)</title><rect x="0.9820%" y="485" width="2.2913%" height="15" fill="rgb(237,122,38)" fg:x="6018054" fg:w="14042126"/><text x="1.2320%" y="495.50">r..</text></g><g><title>rsa::key::RsaPrivateKey::new_with_exp (14,042,126 samples, 2.29%)</title><rect x="0.9820%" y="469" width="2.2913%" height="15" fill="rgb(244,218,35)" fg:x="6018054" fg:w="14042126"/><text x="1.2320%" y="479.50">r..</text></g><g><title>rsa::algorithms::generate::generate_multi_prime_key_with_exp (14,042,126 samples, 2.29%)</title><rect x="0.9820%" y="453" width="2.2913%" height="15" fill="rgb(240,68,47)" fg:x="6018054" fg:w="14042126"/><text x="1.2320%" y="463.50">r..</text></g><g><title>&lt;R as num_bigint_dig::bigrand::RandPrime&gt;::gen_prime (14,042,126 samples, 2.29%)</title><rect x="0.9820%" y="437" width="2.2913%" height="15" fill="rgb(210,16,53)" fg:x="6018054" fg:w="14042126"/><text x="1.2320%" y="447.50">&lt;..</text></g><g><title>num_bigint_dig::prime::probably_prime (14,042,126 samples, 2.29%)</title><rect x="0.9820%" y="421" width="2.2913%" height="15" fill="rgb(235,124,12)" fg:x="6018054" fg:w="14042126"/><text x="1.2320%" y="431.50">n..</text></g><g><title>num_bigint_dig::prime::probably_prime_miller_rabin (12,036,108 samples, 1.96%)</title><rect x="1.3093%" y="405" width="1.9640%" height="15" fill="rgb(224,169,11)" fg:x="8024072" fg:w="12036108"/><text x="1.5593%" y="415.50">n..</text></g><g><title>rand_core::SeedableRng::seed_from_u64 (1,003,009 samples, 0.16%)</title><rect x="3.1097%" y="389" width="0.1637%" height="15" fill="rgb(250,166,2)" fg:x="19057171" fg:w="1003009"/><text x="3.3597%" y="399.50"></text></g><g><title>rand_core::SeedableRng::seed_from_u64::pcg32 (1,003,009 samples, 0.16%)</title><rect x="3.1097%" y="373" width="0.1637%" height="15" fill="rgb(242,216,29)" fg:x="19057171" fg:w="1003009"/><text x="3.3597%" y="383.50"></text></g><g><title>num_bigint_dig::prime::probably_prime_lucas (1,003,009 samples, 0.16%)</title><rect x="3.2733%" y="405" width="0.1637%" height="15" fill="rgb(230,116,27)" fg:x="20060180" fg:w="1003009"/><text x="3.5233%" y="415.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (1,003,009 samples, 0.16%)</title><rect x="3.2733%" y="389" width="0.1637%" height="15" fill="rgb(228,99,48)" fg:x="20060180" fg:w="1003009"/><text x="3.5233%" y="399.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (1,003,009 samples, 0.16%)</title><rect x="3.2733%" y="373" width="0.1637%" height="15" fill="rgb(253,11,6)" fg:x="20060180" fg:w="1003009"/><text x="3.5233%" y="383.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (1,003,009 samples, 0.16%)</title><rect x="3.2733%" y="357" width="0.1637%" height="15" fill="rgb(247,143,39)" fg:x="20060180" fg:w="1003009"/><text x="3.5233%" y="367.50"></text></g><g><title>num_bigint_dig::algorithms::sub::sub2 (1,003,009 samples, 0.16%)</title><rect x="3.2733%" y="341" width="0.1637%" height="15" fill="rgb(236,97,10)" fg:x="20060180" fg:w="1003009"/><text x="3.5233%" y="351.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Sub&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::sub (1,003,009 samples, 0.16%)</title><rect x="3.4370%" y="389" width="0.1637%" height="15" fill="rgb(233,208,19)" fg:x="21063189" fg:w="1003009"/><text x="3.6870%" y="399.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::ops::arith::Sub&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::sub (1,003,009 samples, 0.16%)</title><rect x="3.4370%" y="373" width="0.1637%" height="15" fill="rgb(216,164,2)" fg:x="21063189" fg:w="1003009"/><text x="3.6870%" y="383.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="357" width="0.1637%" height="15" fill="rgb(220,129,5)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="367.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="341" width="0.1637%" height="15" fill="rgb(242,17,10)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="351.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="325" width="0.1637%" height="15" fill="rgb(242,107,0)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="335.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="309" width="0.1637%" height="15" fill="rgb(251,28,31)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="319.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="293" width="0.1637%" height="15" fill="rgb(233,223,10)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="303.50"></text></g><g><title>num_bigint_dig::algorithms::shl::biguint_shl (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="277" width="0.1637%" height="15" fill="rgb(215,21,27)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="287.50"></text></g><g><title>alloc::borrow::Cow&lt;B&gt;::into_owned (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="261" width="0.1637%" height="15" fill="rgb(232,23,21)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="271.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="245" width="0.1637%" height="15" fill="rgb(244,5,23)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="255.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::clone::Clone&gt;::clone (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="229" width="0.1637%" height="15" fill="rgb(226,81,46)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="239.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="213" width="0.1637%" height="15" fill="rgb(247,70,30)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="223.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="197" width="0.1637%" height="15" fill="rgb(212,68,19)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="181" width="0.1637%" height="15" fill="rgb(240,187,13)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="191.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="165" width="0.1637%" height="15" fill="rgb(223,113,26)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="175.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="149" width="0.1637%" height="15" fill="rgb(206,192,2)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="159.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="133" width="0.1637%" height="15" fill="rgb(241,108,4)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="143.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="117" width="0.1637%" height="15" fill="rgb(247,173,49)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="127.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_grow (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="101" width="0.1637%" height="15" fill="rgb(224,114,35)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="85" width="0.1637%" height="15" fill="rgb(245,159,27)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="95.50"></text></g><g><title>__GI___libc_malloc (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="69" width="0.1637%" height="15" fill="rgb(245,172,44)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="79.50"></text></g><g><title>tcache_get (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="53" width="0.1637%" height="15" fill="rgb(236,23,11)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="63.50"></text></g><g><title>tcache_get_n (1,003,009 samples, 0.16%)</title><rect x="3.6007%" y="37" width="0.1637%" height="15" fill="rgb(205,117,38)" fg:x="22066198" fg:w="1003009"/><text x="3.8507%" y="47.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,003,009 samples, 0.16%)</title><rect x="4.4190%" y="341" width="0.1637%" height="15" fill="rgb(237,72,25)" fg:x="27081243" fg:w="1003009"/><text x="4.6690%" y="351.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (1,003,009 samples, 0.16%)</title><rect x="4.4190%" y="325" width="0.1637%" height="15" fill="rgb(244,70,9)" fg:x="27081243" fg:w="1003009"/><text x="4.6690%" y="335.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (1,003,009 samples, 0.16%)</title><rect x="4.4190%" y="309" width="0.1637%" height="15" fill="rgb(217,125,39)" fg:x="27081243" fg:w="1003009"/><text x="4.6690%" y="319.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,003,009 samples, 0.16%)</title><rect x="4.5827%" y="341" width="0.1637%" height="15" fill="rgb(235,36,10)" fg:x="28084252" fg:w="1003009"/><text x="4.8327%" y="351.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,003,009 samples, 0.16%)</title><rect x="4.5827%" y="325" width="0.1637%" height="15" fill="rgb(251,123,47)" fg:x="28084252" fg:w="1003009"/><text x="4.8327%" y="335.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (1,003,009 samples, 0.16%)</title><rect x="4.5827%" y="309" width="0.1637%" height="15" fill="rgb(221,13,13)" fg:x="28084252" fg:w="1003009"/><text x="4.8327%" y="319.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (1,003,009 samples, 0.16%)</title><rect x="4.5827%" y="293" width="0.1637%" height="15" fill="rgb(238,131,9)" fg:x="28084252" fg:w="1003009"/><text x="4.8327%" y="303.50"></text></g><g><title>asm_sysvec_call_function_single (3,009,027 samples, 0.49%)</title><rect x="4.7463%" y="341" width="0.4910%" height="15" fill="rgb(211,50,8)" fg:x="29087261" fg:w="3009027"/><text x="4.9963%" y="351.50"></text></g><g><title>sysvec_call_function_single (3,009,027 samples, 0.49%)</title><rect x="4.7463%" y="325" width="0.4910%" height="15" fill="rgb(245,182,24)" fg:x="29087261" fg:w="3009027"/><text x="4.9963%" y="335.50"></text></g><g><title>irqentry_exit (3,009,027 samples, 0.49%)</title><rect x="4.7463%" y="309" width="0.4910%" height="15" fill="rgb(242,14,37)" fg:x="29087261" fg:w="3009027"/><text x="4.9963%" y="319.50"></text></g><g><title>irqentry_exit_to_user_mode (3,009,027 samples, 0.49%)</title><rect x="4.7463%" y="293" width="0.4910%" height="15" fill="rgb(246,228,12)" fg:x="29087261" fg:w="3009027"/><text x="4.9963%" y="303.50"></text></g><g><title>schedule (1,003,009 samples, 0.16%)</title><rect x="5.0736%" y="277" width="0.1637%" height="15" fill="rgb(213,55,15)" fg:x="31093279" fg:w="1003009"/><text x="5.3236%" y="287.50"></text></g><g><title>__schedule (1,003,009 samples, 0.16%)</title><rect x="5.0736%" y="261" width="0.1637%" height="15" fill="rgb(209,9,3)" fg:x="31093279" fg:w="1003009"/><text x="5.3236%" y="271.50"></text></g><g><title>finish_task_switch.isra.0 (1,003,009 samples, 0.16%)</title><rect x="5.0736%" y="245" width="0.1637%" height="15" fill="rgb(230,59,30)" fg:x="31093279" fg:w="1003009"/><text x="5.3236%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (20,060,180 samples, 3.27%)</title><rect x="6.0556%" y="325" width="3.2733%" height="15" fill="rgb(209,121,21)" fg:x="37111333" fg:w="20060180"/><text x="6.3056%" y="335.50">&lt;co..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (20,060,180 samples, 3.27%)</title><rect x="6.0556%" y="309" width="3.2733%" height="15" fill="rgb(220,109,13)" fg:x="37111333" fg:w="20060180"/><text x="6.3056%" y="319.50">&lt;co..</text></g><g><title>asm_sysvec_call_function_single (7,021,063 samples, 1.15%)</title><rect x="8.1833%" y="293" width="1.1457%" height="15" fill="rgb(232,18,1)" fg:x="50150450" fg:w="7021063"/><text x="8.4333%" y="303.50"></text></g><g><title>sysvec_call_function_single (7,021,063 samples, 1.15%)</title><rect x="8.1833%" y="277" width="1.1457%" height="15" fill="rgb(215,41,42)" fg:x="50150450" fg:w="7021063"/><text x="8.4333%" y="287.50"></text></g><g><title>irqentry_exit (7,021,063 samples, 1.15%)</title><rect x="8.1833%" y="261" width="1.1457%" height="15" fill="rgb(224,123,36)" fg:x="50150450" fg:w="7021063"/><text x="8.4333%" y="271.50"></text></g><g><title>irqentry_exit_to_user_mode (7,021,063 samples, 1.15%)</title><rect x="8.1833%" y="245" width="1.1457%" height="15" fill="rgb(240,125,3)" fg:x="50150450" fg:w="7021063"/><text x="8.4333%" y="255.50"></text></g><g><title>schedule (1,003,009 samples, 0.16%)</title><rect x="9.1653%" y="229" width="0.1637%" height="15" fill="rgb(205,98,50)" fg:x="56168504" fg:w="1003009"/><text x="9.4153%" y="239.50"></text></g><g><title>__schedule (1,003,009 samples, 0.16%)</title><rect x="9.1653%" y="213" width="0.1637%" height="15" fill="rgb(205,185,37)" fg:x="56168504" fg:w="1003009"/><text x="9.4153%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (1,003,009 samples, 0.16%)</title><rect x="9.1653%" y="197" width="0.1637%" height="15" fill="rgb(238,207,15)" fg:x="56168504" fg:w="1003009"/><text x="9.4153%" y="207.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_ww (7,021,063 samples, 1.15%)</title><rect x="9.3290%" y="325" width="1.1457%" height="15" fill="rgb(213,199,42)" fg:x="57171513" fg:w="7021063"/><text x="9.5790%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7,021,063 samples, 1.15%)</title><rect x="9.3290%" y="309" width="1.1457%" height="15" fill="rgb(235,201,11)" fg:x="57171513" fg:w="7021063"/><text x="9.5790%" y="319.50"></text></g><g><title>asm_sysvec_call_function_single (2,006,018 samples, 0.33%)</title><rect x="10.1473%" y="293" width="0.3273%" height="15" fill="rgb(207,46,11)" fg:x="62186558" fg:w="2006018"/><text x="10.3973%" y="303.50"></text></g><g><title>sysvec_call_function_single (2,006,018 samples, 0.33%)</title><rect x="10.1473%" y="277" width="0.3273%" height="15" fill="rgb(241,35,35)" fg:x="62186558" fg:w="2006018"/><text x="10.3973%" y="287.50"></text></g><g><title>irqentry_exit (2,006,018 samples, 0.33%)</title><rect x="10.1473%" y="261" width="0.3273%" height="15" fill="rgb(243,32,47)" fg:x="62186558" fg:w="2006018"/><text x="10.3973%" y="271.50"></text></g><g><title>irqentry_exit_to_user_mode (2,006,018 samples, 0.33%)</title><rect x="10.1473%" y="245" width="0.3273%" height="15" fill="rgb(247,202,23)" fg:x="62186558" fg:w="2006018"/><text x="10.3973%" y="255.50"></text></g><g><title>schedule (1,003,009 samples, 0.16%)</title><rect x="10.3110%" y="229" width="0.1637%" height="15" fill="rgb(219,102,11)" fg:x="63189567" fg:w="1003009"/><text x="10.5610%" y="239.50"></text></g><g><title>__schedule (1,003,009 samples, 0.16%)</title><rect x="10.3110%" y="213" width="0.1637%" height="15" fill="rgb(243,110,44)" fg:x="63189567" fg:w="1003009"/><text x="10.5610%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (1,003,009 samples, 0.16%)</title><rect x="10.3110%" y="197" width="0.1637%" height="15" fill="rgb(222,74,54)" fg:x="63189567" fg:w="1003009"/><text x="10.5610%" y="207.50"></text></g><g><title>irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="14.0753%" y="277" width="0.1637%" height="15" fill="rgb(216,99,12)" fg:x="86258774" fg:w="1003009"/><text x="14.3253%" y="287.50"></text></g><g><title>__irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="14.0753%" y="261" width="0.1637%" height="15" fill="rgb(226,22,26)" fg:x="86258774" fg:w="1003009"/><text x="14.3253%" y="271.50"></text></g><g><title>handle_softirqs (1,003,009 samples, 0.16%)</title><rect x="14.0753%" y="245" width="0.1637%" height="15" fill="rgb(217,163,10)" fg:x="86258774" fg:w="1003009"/><text x="14.3253%" y="255.50"></text></g><g><title>rcu_core_si (1,003,009 samples, 0.16%)</title><rect x="14.0753%" y="229" width="0.1637%" height="15" fill="rgb(213,25,53)" fg:x="86258774" fg:w="1003009"/><text x="14.3253%" y="239.50"></text></g><g><title>rcu_core (1,003,009 samples, 0.16%)</title><rect x="14.0753%" y="213" width="0.1637%" height="15" fill="rgb(252,105,26)" fg:x="86258774" fg:w="1003009"/><text x="14.3253%" y="223.50"></text></g><g><title>rcu_do_batch (1,003,009 samples, 0.16%)</title><rect x="14.0753%" y="197" width="0.1637%" height="15" fill="rgb(220,39,43)" fg:x="86258774" fg:w="1003009"/><text x="14.3253%" y="207.50"></text></g><g><title>delayed_put_task_struct (1,003,009 samples, 0.16%)</title><rect x="14.0753%" y="181" width="0.1637%" height="15" fill="rgb(229,68,48)" fg:x="86258774" fg:w="1003009"/><text x="14.3253%" y="191.50"></text></g><g><title>__put_task_struct (1,003,009 samples, 0.16%)</title><rect x="14.0753%" y="165" width="0.1637%" height="15" fill="rgb(252,8,32)" fg:x="86258774" fg:w="1003009"/><text x="14.3253%" y="175.50"></text></g><g><title>free_task (1,003,009 samples, 0.16%)</title><rect x="14.0753%" y="149" width="0.1637%" height="15" fill="rgb(223,20,43)" fg:x="86258774" fg:w="1003009"/><text x="14.3253%" y="159.50"></text></g><g><title>kmem_cache_free (1,003,009 samples, 0.16%)</title><rect x="14.0753%" y="133" width="0.1637%" height="15" fill="rgb(229,81,49)" fg:x="86258774" fg:w="1003009"/><text x="14.3253%" y="143.50"></text></g><g><title>__memcg_slab_free_hook (1,003,009 samples, 0.16%)</title><rect x="14.0753%" y="117" width="0.1637%" height="15" fill="rgb(236,28,36)" fg:x="86258774" fg:w="1003009"/><text x="14.3253%" y="127.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2,006,018 samples, 0.33%)</title><rect x="14.0753%" y="309" width="0.3273%" height="15" fill="rgb(249,185,26)" fg:x="86258774" fg:w="2006018"/><text x="14.3253%" y="319.50"></text></g><g><title>sysvec_apic_timer_interrupt (2,006,018 samples, 0.33%)</title><rect x="14.0753%" y="293" width="0.3273%" height="15" fill="rgb(249,174,33)" fg:x="86258774" fg:w="2006018"/><text x="14.3253%" y="303.50"></text></g><g><title>irqentry_exit (1,003,009 samples, 0.16%)</title><rect x="14.2390%" y="277" width="0.1637%" height="15" fill="rgb(233,201,37)" fg:x="87261783" fg:w="1003009"/><text x="14.4890%" y="287.50"></text></g><g><title>irqentry_exit_to_user_mode (1,003,009 samples, 0.16%)</title><rect x="14.2390%" y="261" width="0.1637%" height="15" fill="rgb(221,78,26)" fg:x="87261783" fg:w="1003009"/><text x="14.4890%" y="271.50"></text></g><g><title>schedule (1,003,009 samples, 0.16%)</title><rect x="14.2390%" y="245" width="0.1637%" height="15" fill="rgb(250,127,30)" fg:x="87261783" fg:w="1003009"/><text x="14.4890%" y="255.50"></text></g><g><title>__schedule (1,003,009 samples, 0.16%)</title><rect x="14.2390%" y="229" width="0.1637%" height="15" fill="rgb(230,49,44)" fg:x="87261783" fg:w="1003009"/><text x="14.4890%" y="239.50"></text></g><g><title>finish_task_switch.isra.0 (1,003,009 samples, 0.16%)</title><rect x="14.2390%" y="213" width="0.1637%" height="15" fill="rgb(229,67,23)" fg:x="87261783" fg:w="1003009"/><text x="14.4890%" y="223.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (65,195,585 samples, 10.64%)</title><rect x="5.2373%" y="341" width="10.6383%" height="15" fill="rgb(249,83,47)" fg:x="32096288" fg:w="65195585"/><text x="5.4873%" y="351.50">num_bigint_dig::..</text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (33,099,297 samples, 5.40%)</title><rect x="10.4746%" y="325" width="5.4010%" height="15" fill="rgb(215,43,3)" fg:x="64192576" fg:w="33099297"/><text x="10.7246%" y="335.50">num_big..</text></g><g><title>asm_sysvec_call_function_single (9,027,081 samples, 1.47%)</title><rect x="14.4026%" y="309" width="1.4730%" height="15" fill="rgb(238,154,13)" fg:x="88264792" fg:w="9027081"/><text x="14.6526%" y="319.50"></text></g><g><title>sysvec_call_function_single (9,027,081 samples, 1.47%)</title><rect x="14.4026%" y="293" width="1.4730%" height="15" fill="rgb(219,56,2)" fg:x="88264792" fg:w="9027081"/><text x="14.6526%" y="303.50"></text></g><g><title>irqentry_exit (9,027,081 samples, 1.47%)</title><rect x="14.4026%" y="277" width="1.4730%" height="15" fill="rgb(233,0,4)" fg:x="88264792" fg:w="9027081"/><text x="14.6526%" y="287.50"></text></g><g><title>irqentry_exit_to_user_mode (9,027,081 samples, 1.47%)</title><rect x="14.4026%" y="261" width="1.4730%" height="15" fill="rgb(235,30,7)" fg:x="88264792" fg:w="9027081"/><text x="14.6526%" y="271.50"></text></g><g><title>schedule (5,015,045 samples, 0.82%)</title><rect x="15.0573%" y="245" width="0.8183%" height="15" fill="rgb(250,79,13)" fg:x="92276828" fg:w="5015045"/><text x="15.3073%" y="255.50"></text></g><g><title>__schedule (5,015,045 samples, 0.82%)</title><rect x="15.0573%" y="229" width="0.8183%" height="15" fill="rgb(211,146,34)" fg:x="92276828" fg:w="5015045"/><text x="15.3073%" y="239.50"></text></g><g><title>finish_task_switch.isra.0 (5,015,045 samples, 0.82%)</title><rect x="15.0573%" y="213" width="0.8183%" height="15" fill="rgb(228,22,38)" fg:x="92276828" fg:w="5015045"/><text x="15.3073%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,003,009 samples, 0.16%)</title><rect x="15.8756%" y="325" width="0.1637%" height="15" fill="rgb(235,168,5)" fg:x="97291873" fg:w="1003009"/><text x="16.1256%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,003,009 samples, 0.16%)</title><rect x="15.8756%" y="309" width="0.1637%" height="15" fill="rgb(221,155,16)" fg:x="97291873" fg:w="1003009"/><text x="16.1256%" y="319.50"></text></g><g><title>num_bigint_dig::biguint::monty::sub_vv (3,009,027 samples, 0.49%)</title><rect x="15.8756%" y="341" width="0.4910%" height="15" fill="rgb(215,215,53)" fg:x="97291873" fg:w="3009027"/><text x="16.1256%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (2,006,018 samples, 0.33%)</title><rect x="16.0393%" y="325" width="0.3273%" height="15" fill="rgb(223,4,10)" fg:x="98294882" fg:w="2006018"/><text x="16.2893%" y="335.50"></text></g><g><title>asm_sysvec_call_function_single (1,003,009 samples, 0.16%)</title><rect x="16.2029%" y="309" width="0.1637%" height="15" fill="rgb(234,103,6)" fg:x="99297891" fg:w="1003009"/><text x="16.4529%" y="319.50"></text></g><g><title>sysvec_call_function_single (1,003,009 samples, 0.16%)</title><rect x="16.2029%" y="293" width="0.1637%" height="15" fill="rgb(227,97,0)" fg:x="99297891" fg:w="1003009"/><text x="16.4529%" y="303.50"></text></g><g><title>irqentry_exit (1,003,009 samples, 0.16%)</title><rect x="16.2029%" y="277" width="0.1637%" height="15" fill="rgb(234,150,53)" fg:x="99297891" fg:w="1003009"/><text x="16.4529%" y="287.50"></text></g><g><title>irqentry_exit_to_user_mode (1,003,009 samples, 0.16%)</title><rect x="16.2029%" y="261" width="0.1637%" height="15" fill="rgb(228,201,54)" fg:x="99297891" fg:w="1003009"/><text x="16.4529%" y="271.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::len (1,003,009 samples, 0.16%)</title><rect x="16.3666%" y="341" width="0.1637%" height="15" fill="rgb(222,22,37)" fg:x="100300900" fg:w="1003009"/><text x="16.6166%" y="351.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (1,003,009 samples, 0.16%)</title><rect x="16.3666%" y="325" width="0.1637%" height="15" fill="rgb(237,53,32)" fg:x="100300900" fg:w="1003009"/><text x="16.6166%" y="335.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (1,003,009 samples, 0.16%)</title><rect x="16.3666%" y="309" width="0.1637%" height="15" fill="rgb(233,25,53)" fg:x="100300900" fg:w="1003009"/><text x="16.6166%" y="319.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1,003,009 samples, 0.16%)</title><rect x="16.5303%" y="325" width="0.1637%" height="15" fill="rgb(210,40,34)" fg:x="101303909" fg:w="1003009"/><text x="16.7803%" y="335.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (1,003,009 samples, 0.16%)</title><rect x="16.5303%" y="309" width="0.1637%" height="15" fill="rgb(241,220,44)" fg:x="101303909" fg:w="1003009"/><text x="16.7803%" y="319.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (1,003,009 samples, 0.16%)</title><rect x="16.5303%" y="293" width="0.1637%" height="15" fill="rgb(235,28,35)" fg:x="101303909" fg:w="1003009"/><text x="16.7803%" y="303.50"></text></g><g><title>rsa_key::rsa_key_2048 (83,249,747 samples, 13.58%)</title><rect x="3.2733%" y="501" width="13.5843%" height="15" fill="rgb(210,56,17)" fg:x="20060180" fg:w="83249747"/><text x="3.5233%" y="511.50">rsa_key::rsa_key_2048</text></g><g><title>rsa::key::RsaPrivateKey::new (83,249,747 samples, 13.58%)</title><rect x="3.2733%" y="485" width="13.5843%" height="15" fill="rgb(224,130,29)" fg:x="20060180" fg:w="83249747"/><text x="3.5233%" y="495.50">rsa::key::RsaPrivateK..</text></g><g><title>rsa::key::RsaPrivateKey::new_with_exp (83,249,747 samples, 13.58%)</title><rect x="3.2733%" y="469" width="13.5843%" height="15" fill="rgb(235,212,8)" fg:x="20060180" fg:w="83249747"/><text x="3.5233%" y="479.50">rsa::key::RsaPrivateK..</text></g><g><title>rsa::algorithms::generate::generate_multi_prime_key_with_exp (83,249,747 samples, 13.58%)</title><rect x="3.2733%" y="453" width="13.5843%" height="15" fill="rgb(223,33,50)" fg:x="20060180" fg:w="83249747"/><text x="3.5233%" y="463.50">rsa::algorithms::gene..</text></g><g><title>&lt;R as num_bigint_dig::bigrand::RandPrime&gt;::gen_prime (83,249,747 samples, 13.58%)</title><rect x="3.2733%" y="437" width="13.5843%" height="15" fill="rgb(219,149,13)" fg:x="20060180" fg:w="83249747"/><text x="3.5233%" y="447.50">&lt;R as num_bigint_dig:..</text></g><g><title>num_bigint_dig::prime::probably_prime (83,249,747 samples, 13.58%)</title><rect x="3.2733%" y="421" width="13.5843%" height="15" fill="rgb(250,156,29)" fg:x="20060180" fg:w="83249747"/><text x="3.5233%" y="431.50">num_bigint_dig::prime..</text></g><g><title>num_bigint_dig::prime::probably_prime_miller_rabin (82,246,738 samples, 13.42%)</title><rect x="3.4370%" y="405" width="13.4206%" height="15" fill="rgb(216,193,19)" fg:x="21063189" fg:w="82246738"/><text x="3.6870%" y="415.50">num_bigint_dig::prim..</text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (81,243,729 samples, 13.26%)</title><rect x="3.6007%" y="389" width="13.2570%" height="15" fill="rgb(216,135,14)" fg:x="22066198" fg:w="81243729"/><text x="3.8507%" y="399.50">num_bigint_dig::bigu..</text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (81,243,729 samples, 13.26%)</title><rect x="3.6007%" y="373" width="13.2570%" height="15" fill="rgb(241,47,5)" fg:x="22066198" fg:w="81243729"/><text x="3.8507%" y="383.50">num_bigint_dig::bigu..</text></g><g><title>num_bigint_dig::biguint::monty::montgomery (80,240,720 samples, 13.09%)</title><rect x="3.7643%" y="357" width="13.0933%" height="15" fill="rgb(233,42,35)" fg:x="23069207" fg:w="80240720"/><text x="4.0143%" y="367.50">num_bigint_dig::bigu..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::resize (2,006,018 samples, 0.33%)</title><rect x="16.5303%" y="341" width="0.3273%" height="15" fill="rgb(231,13,6)" fg:x="101303909" fg:w="2006018"/><text x="16.7803%" y="351.50"></text></g><g><title>asm_sysvec_call_function_single (1,003,009 samples, 0.16%)</title><rect x="16.6939%" y="325" width="0.1637%" height="15" fill="rgb(207,181,40)" fg:x="102306918" fg:w="1003009"/><text x="16.9439%" y="335.50"></text></g><g><title>sysvec_call_function_single (1,003,009 samples, 0.16%)</title><rect x="16.6939%" y="309" width="0.1637%" height="15" fill="rgb(254,173,49)" fg:x="102306918" fg:w="1003009"/><text x="16.9439%" y="319.50"></text></g><g><title>irqentry_exit (1,003,009 samples, 0.16%)</title><rect x="16.6939%" y="293" width="0.1637%" height="15" fill="rgb(221,1,38)" fg:x="102306918" fg:w="1003009"/><text x="16.9439%" y="303.50"></text></g><g><title>irqentry_exit_to_user_mode (1,003,009 samples, 0.16%)</title><rect x="16.6939%" y="277" width="0.1637%" height="15" fill="rgb(206,124,46)" fg:x="102306918" fg:w="1003009"/><text x="16.9439%" y="287.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,003,009 samples, 0.16%)</title><rect x="16.8576%" y="309" width="0.1637%" height="15" fill="rgb(249,21,11)" fg:x="103309927" fg:w="1003009"/><text x="17.1076%" y="319.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,003,009 samples, 0.16%)</title><rect x="16.8576%" y="293" width="0.1637%" height="15" fill="rgb(222,201,40)" fg:x="103309927" fg:w="1003009"/><text x="17.1076%" y="303.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (1,003,009 samples, 0.16%)</title><rect x="16.8576%" y="277" width="0.1637%" height="15" fill="rgb(235,61,29)" fg:x="103309927" fg:w="1003009"/><text x="17.1076%" y="287.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (1,003,009 samples, 0.16%)</title><rect x="16.8576%" y="261" width="0.1637%" height="15" fill="rgb(219,207,3)" fg:x="103309927" fg:w="1003009"/><text x="17.1076%" y="271.50"></text></g><g><title>num_bigint_dig::algorithms::mac::mac3 (1,003,009 samples, 0.16%)</title><rect x="17.0213%" y="309" width="0.1637%" height="15" fill="rgb(222,56,46)" fg:x="104312936" fg:w="1003009"/><text x="17.2713%" y="319.50"></text></g><g><title>num_bigint_dig::algorithms::mac::long (1,003,009 samples, 0.16%)</title><rect x="17.0213%" y="293" width="0.1637%" height="15" fill="rgb(239,76,54)" fg:x="104312936" fg:w="1003009"/><text x="17.2713%" y="303.50"></text></g><g><title>num_bigint_dig::algorithms::mac::mac_digit (1,003,009 samples, 0.16%)</title><rect x="17.0213%" y="277" width="0.1637%" height="15" fill="rgb(231,124,27)" fg:x="104312936" fg:w="1003009"/><text x="17.2713%" y="287.50"></text></g><g><title>num_bigint_dig::algorithms::mac::mac_with_carry (1,003,009 samples, 0.16%)</title><rect x="17.0213%" y="261" width="0.1637%" height="15" fill="rgb(249,195,6)" fg:x="104312936" fg:w="1003009"/><text x="17.2713%" y="271.50"></text></g><g><title>num_bigint_dig::biguint::BigUint::normalized (2,006,018 samples, 0.33%)</title><rect x="17.1849%" y="309" width="0.3273%" height="15" fill="rgb(237,174,47)" fg:x="105315945" fg:w="2006018"/><text x="17.4349%" y="319.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1,003,009 samples, 0.16%)</title><rect x="17.3486%" y="293" width="0.1637%" height="15" fill="rgb(206,201,31)" fg:x="106318954" fg:w="1003009"/><text x="17.5986%" y="303.50"></text></g><g><title>sysvec_apic_timer_interrupt (1,003,009 samples, 0.16%)</title><rect x="17.3486%" y="277" width="0.1637%" height="15" fill="rgb(231,57,52)" fg:x="106318954" fg:w="1003009"/><text x="17.5986%" y="287.50"></text></g><g><title>irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="17.3486%" y="261" width="0.1637%" height="15" fill="rgb(248,177,22)" fg:x="106318954" fg:w="1003009"/><text x="17.5986%" y="271.50"></text></g><g><title>__irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="17.3486%" y="245" width="0.1637%" height="15" fill="rgb(215,211,37)" fg:x="106318954" fg:w="1003009"/><text x="17.5986%" y="255.50"></text></g><g><title>handle_softirqs (1,003,009 samples, 0.16%)</title><rect x="17.3486%" y="229" width="0.1637%" height="15" fill="rgb(241,128,51)" fg:x="106318954" fg:w="1003009"/><text x="17.5986%" y="239.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1,003,009 samples, 0.16%)</title><rect x="17.6759%" y="165" width="0.1637%" height="15" fill="rgb(227,165,31)" fg:x="108324972" fg:w="1003009"/><text x="17.9259%" y="175.50"></text></g><g><title>sysvec_apic_timer_interrupt (1,003,009 samples, 0.16%)</title><rect x="17.6759%" y="149" width="0.1637%" height="15" fill="rgb(228,167,24)" fg:x="108324972" fg:w="1003009"/><text x="17.9259%" y="159.50"></text></g><g><title>irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="17.6759%" y="133" width="0.1637%" height="15" fill="rgb(228,143,12)" fg:x="108324972" fg:w="1003009"/><text x="17.9259%" y="143.50"></text></g><g><title>__irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="17.6759%" y="117" width="0.1637%" height="15" fill="rgb(249,149,8)" fg:x="108324972" fg:w="1003009"/><text x="17.9259%" y="127.50"></text></g><g><title>handle_softirqs (1,003,009 samples, 0.16%)</title><rect x="17.6759%" y="101" width="0.1637%" height="15" fill="rgb(243,35,44)" fg:x="108324972" fg:w="1003009"/><text x="17.9259%" y="111.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Mul&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::mul (7,021,063 samples, 1.15%)</title><rect x="16.8576%" y="341" width="1.1457%" height="15" fill="rgb(246,89,9)" fg:x="103309927" fg:w="7021063"/><text x="17.1076%" y="351.50"></text></g><g><title>num_bigint_dig::algorithms::mul::mul3 (7,021,063 samples, 1.15%)</title><rect x="16.8576%" y="325" width="1.1457%" height="15" fill="rgb(233,213,13)" fg:x="103309927" fg:w="7021063"/><text x="17.1076%" y="335.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::from_elem (3,009,027 samples, 0.49%)</title><rect x="17.5123%" y="309" width="0.4910%" height="15" fill="rgb(233,141,41)" fg:x="107321963" fg:w="3009027"/><text x="17.7623%" y="319.50"></text></g><g><title>alloc::vec::from_elem (3,009,027 samples, 0.49%)</title><rect x="17.5123%" y="293" width="0.4910%" height="15" fill="rgb(239,167,4)" fg:x="107321963" fg:w="3009027"/><text x="17.7623%" y="303.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (3,009,027 samples, 0.49%)</title><rect x="17.5123%" y="277" width="0.4910%" height="15" fill="rgb(209,217,16)" fg:x="107321963" fg:w="3009027"/><text x="17.7623%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (3,009,027 samples, 0.49%)</title><rect x="17.5123%" y="261" width="0.4910%" height="15" fill="rgb(219,88,35)" fg:x="107321963" fg:w="3009027"/><text x="17.7623%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (3,009,027 samples, 0.49%)</title><rect x="17.5123%" y="245" width="0.4910%" height="15" fill="rgb(220,193,23)" fg:x="107321963" fg:w="3009027"/><text x="17.7623%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (3,009,027 samples, 0.49%)</title><rect x="17.5123%" y="229" width="0.4910%" height="15" fill="rgb(230,90,52)" fg:x="107321963" fg:w="3009027"/><text x="17.7623%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,009,027 samples, 0.49%)</title><rect x="17.5123%" y="213" width="0.4910%" height="15" fill="rgb(252,106,19)" fg:x="107321963" fg:w="3009027"/><text x="17.7623%" y="223.50"></text></g><g><title>alloc::alloc::alloc_zeroed (3,009,027 samples, 0.49%)</title><rect x="17.5123%" y="197" width="0.4910%" height="15" fill="rgb(206,74,20)" fg:x="107321963" fg:w="3009027"/><text x="17.7623%" y="207.50"></text></g><g><title>__libc_calloc (3,009,027 samples, 0.49%)</title><rect x="17.5123%" y="181" width="0.4910%" height="15" fill="rgb(230,138,44)" fg:x="107321963" fg:w="3009027"/><text x="17.7623%" y="191.50"></text></g><g><title>asm_sysvec_call_function_single (1,003,009 samples, 0.16%)</title><rect x="17.8396%" y="165" width="0.1637%" height="15" fill="rgb(235,182,43)" fg:x="109327981" fg:w="1003009"/><text x="18.0896%" y="175.50"></text></g><g><title>sysvec_call_function_single (1,003,009 samples, 0.16%)</title><rect x="17.8396%" y="149" width="0.1637%" height="15" fill="rgb(242,16,51)" fg:x="109327981" fg:w="1003009"/><text x="18.0896%" y="159.50"></text></g><g><title>irqentry_exit (1,003,009 samples, 0.16%)</title><rect x="17.8396%" y="133" width="0.1637%" height="15" fill="rgb(248,9,4)" fg:x="109327981" fg:w="1003009"/><text x="18.0896%" y="143.50"></text></g><g><title>irqentry_exit_to_user_mode (1,003,009 samples, 0.16%)</title><rect x="17.8396%" y="117" width="0.1637%" height="15" fill="rgb(210,31,22)" fg:x="109327981" fg:w="1003009"/><text x="18.0896%" y="127.50"></text></g><g><title>schedule (1,003,009 samples, 0.16%)</title><rect x="17.8396%" y="101" width="0.1637%" height="15" fill="rgb(239,54,39)" fg:x="109327981" fg:w="1003009"/><text x="18.0896%" y="111.50"></text></g><g><title>__schedule (1,003,009 samples, 0.16%)</title><rect x="17.8396%" y="85" width="0.1637%" height="15" fill="rgb(230,99,41)" fg:x="109327981" fg:w="1003009"/><text x="18.0896%" y="95.50"></text></g><g><title>finish_task_switch.isra.0 (1,003,009 samples, 0.16%)</title><rect x="17.8396%" y="69" width="0.1637%" height="15" fill="rgb(253,106,12)" fg:x="109327981" fg:w="1003009"/><text x="18.0896%" y="79.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1,003,009 samples, 0.16%)</title><rect x="18.0033%" y="341" width="0.1637%" height="15" fill="rgb(213,46,41)" fg:x="110330990" fg:w="1003009"/><text x="18.2533%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;num_bigint_dig::biguint::BigUint&gt; (1,003,009 samples, 0.16%)</title><rect x="18.1669%" y="341" width="0.1637%" height="15" fill="rgb(215,133,35)" fg:x="111333999" fg:w="1003009"/><text x="18.4169%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[u64: 4]&gt;&gt; (1,003,009 samples, 0.16%)</title><rect x="18.1669%" y="325" width="0.1637%" height="15" fill="rgb(213,28,5)" fg:x="111333999" fg:w="1003009"/><text x="18.4169%" y="335.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.16%)</title><rect x="18.1669%" y="309" width="0.1637%" height="15" fill="rgb(215,77,49)" fg:x="111333999" fg:w="1003009"/><text x="18.4169%" y="319.50"></text></g><g><title>core::mem::drop (1,003,009 samples, 0.16%)</title><rect x="18.1669%" y="293" width="0.1637%" height="15" fill="rgb(248,100,22)" fg:x="111333999" fg:w="1003009"/><text x="18.4169%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (1,003,009 samples, 0.16%)</title><rect x="18.1669%" y="277" width="0.1637%" height="15" fill="rgb(208,67,9)" fg:x="111333999" fg:w="1003009"/><text x="18.4169%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (1,003,009 samples, 0.16%)</title><rect x="18.1669%" y="261" width="0.1637%" height="15" fill="rgb(219,133,21)" fg:x="111333999" fg:w="1003009"/><text x="18.4169%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.16%)</title><rect x="18.1669%" y="245" width="0.1637%" height="15" fill="rgb(246,46,29)" fg:x="111333999" fg:w="1003009"/><text x="18.4169%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,003,009 samples, 0.16%)</title><rect x="18.1669%" y="229" width="0.1637%" height="15" fill="rgb(246,185,52)" fg:x="111333999" fg:w="1003009"/><text x="18.4169%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (1,003,009 samples, 0.16%)</title><rect x="18.1669%" y="213" width="0.1637%" height="15" fill="rgb(252,136,11)" fg:x="111333999" fg:w="1003009"/><text x="18.4169%" y="223.50"></text></g><g><title>__GI___libc_free (1,003,009 samples, 0.16%)</title><rect x="18.1669%" y="197" width="0.1637%" height="15" fill="rgb(219,138,53)" fg:x="111333999" fg:w="1003009"/><text x="18.4169%" y="207.50"></text></g><g><title>_int_free (1,003,009 samples, 0.16%)</title><rect x="18.1669%" y="181" width="0.1637%" height="15" fill="rgb(211,51,23)" fg:x="111333999" fg:w="1003009"/><text x="18.4169%" y="191.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem_digit (2,006,018 samples, 0.33%)</title><rect x="18.3306%" y="341" width="0.3273%" height="15" fill="rgb(247,221,28)" fg:x="112337008" fg:w="2006018"/><text x="18.5806%" y="351.50"></text></g><g><title>num_bigint_dig::prime::probably_prime_lucas (13,039,117 samples, 2.13%)</title><rect x="16.8576%" y="405" width="2.1277%" height="15" fill="rgb(251,222,45)" fg:x="103309927" fg:w="13039117"/><text x="17.1076%" y="415.50">n..</text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (13,039,117 samples, 2.13%)</title><rect x="16.8576%" y="389" width="2.1277%" height="15" fill="rgb(217,162,53)" fg:x="103309927" fg:w="13039117"/><text x="17.1076%" y="399.50">&lt;..</text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (13,039,117 samples, 2.13%)</title><rect x="16.8576%" y="373" width="2.1277%" height="15" fill="rgb(229,93,14)" fg:x="103309927" fg:w="13039117"/><text x="17.1076%" y="383.50">&lt;..</text></g><g><title>num_bigint_dig::algorithms::div::div_rem (13,039,117 samples, 2.13%)</title><rect x="16.8576%" y="357" width="2.1277%" height="15" fill="rgb(209,67,49)" fg:x="103309927" fg:w="13039117"/><text x="17.1076%" y="367.50">n..</text></g><g><title>num_bigint_dig::algorithms::sub::sub2 (2,006,018 samples, 0.33%)</title><rect x="18.6579%" y="341" width="0.3273%" height="15" fill="rgb(213,87,29)" fg:x="114343026" fg:w="2006018"/><text x="18.9079%" y="351.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (1,003,009 samples, 0.16%)</title><rect x="18.9853%" y="357" width="0.1637%" height="15" fill="rgb(205,151,52)" fg:x="116349044" fg:w="1003009"/><text x="19.2353%" y="367.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Rem&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::rem (1,003,009 samples, 0.16%)</title><rect x="18.9853%" y="341" width="0.1637%" height="15" fill="rgb(253,215,39)" fg:x="116349044" fg:w="1003009"/><text x="19.2353%" y="351.50"></text></g><g><title>&lt;num_bigint_dig::biguint::BigUint as num_integer::Integer&gt;::div_rem (1,003,009 samples, 0.16%)</title><rect x="18.9853%" y="325" width="0.1637%" height="15" fill="rgb(221,220,41)" fg:x="116349044" fg:w="1003009"/><text x="19.2353%" y="335.50"></text></g><g><title>num_bigint_dig::algorithms::div::div_rem (1,003,009 samples, 0.16%)</title><rect x="18.9853%" y="309" width="0.1637%" height="15" fill="rgb(218,133,21)" fg:x="116349044" fg:w="1003009"/><text x="19.2353%" y="319.50"></text></g><g><title>&lt;&amp;num_bigint_dig::biguint::BigUint as core::ops::arith::Mul&lt;&amp;num_bigint_dig::biguint::BigUint&gt;&gt;::mul (1,003,009 samples, 0.16%)</title><rect x="18.9853%" y="293" width="0.1637%" height="15" fill="rgb(221,193,43)" fg:x="116349044" fg:w="1003009"/><text x="19.2353%" y="303.50"></text></g><g><title>num_bigint_dig::algorithms::mul::mul3 (1,003,009 samples, 0.16%)</title><rect x="18.9853%" y="277" width="0.1637%" height="15" fill="rgb(240,128,52)" fg:x="116349044" fg:w="1003009"/><text x="19.2353%" y="287.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::from_elem (1,003,009 samples, 0.16%)</title><rect x="18.9853%" y="261" width="0.1637%" height="15" fill="rgb(253,114,12)" fg:x="116349044" fg:w="1003009"/><text x="19.2353%" y="271.50"></text></g><g><title>alloc::vec::from_elem (1,003,009 samples, 0.16%)</title><rect x="18.9853%" y="245" width="0.1637%" height="15" fill="rgb(215,223,47)" fg:x="116349044" fg:w="1003009"/><text x="19.2353%" y="255.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,003,009 samples, 0.16%)</title><rect x="18.9853%" y="229" width="0.1637%" height="15" fill="rgb(248,225,23)" fg:x="116349044" fg:w="1003009"/><text x="19.2353%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1,003,009 samples, 0.16%)</title><rect x="18.9853%" y="213" width="0.1637%" height="15" fill="rgb(250,108,0)" fg:x="116349044" fg:w="1003009"/><text x="19.2353%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1,003,009 samples, 0.16%)</title><rect x="18.9853%" y="197" width="0.1637%" height="15" fill="rgb(228,208,7)" fg:x="116349044" fg:w="1003009"/><text x="19.2353%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1,003,009 samples, 0.16%)</title><rect x="18.9853%" y="181" width="0.1637%" height="15" fill="rgb(244,45,10)" fg:x="116349044" fg:w="1003009"/><text x="19.2353%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,003,009 samples, 0.16%)</title><rect x="18.9853%" y="165" width="0.1637%" height="15" fill="rgb(207,125,25)" fg:x="116349044" fg:w="1003009"/><text x="19.2353%" y="175.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1,003,009 samples, 0.16%)</title><rect x="18.9853%" y="149" width="0.1637%" height="15" fill="rgb(210,195,18)" fg:x="116349044" fg:w="1003009"/><text x="19.2353%" y="159.50"></text></g><g><title>__libc_calloc (1,003,009 samples, 0.16%)</title><rect x="18.9853%" y="133" width="0.1637%" height="15" fill="rgb(249,80,12)" fg:x="116349044" fg:w="1003009"/><text x="19.2353%" y="143.50"></text></g><g><title>_int_malloc (1,003,009 samples, 0.16%)</title><rect x="18.9853%" y="117" width="0.1637%" height="15" fill="rgb(221,65,9)" fg:x="116349044" fg:w="1003009"/><text x="19.2353%" y="127.50"></text></g><g><title>unlink_chunk (1,003,009 samples, 0.16%)</title><rect x="18.9853%" y="101" width="0.1637%" height="15" fill="rgb(235,49,36)" fg:x="116349044" fg:w="1003009"/><text x="19.2353%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;num_bigint_dig::biguint::BigUint&gt; (1,003,009 samples, 0.16%)</title><rect x="19.1489%" y="357" width="0.1637%" height="15" fill="rgb(225,32,20)" fg:x="117352053" fg:w="1003009"/><text x="19.3989%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[u64: 4]&gt;&gt; (1,003,009 samples, 0.16%)</title><rect x="19.1489%" y="341" width="0.1637%" height="15" fill="rgb(215,141,46)" fg:x="117352053" fg:w="1003009"/><text x="19.3989%" y="351.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.16%)</title><rect x="19.1489%" y="325" width="0.1637%" height="15" fill="rgb(250,160,47)" fg:x="117352053" fg:w="1003009"/><text x="19.3989%" y="335.50"></text></g><g><title>core::mem::drop (1,003,009 samples, 0.16%)</title><rect x="19.1489%" y="309" width="0.1637%" height="15" fill="rgb(216,222,40)" fg:x="117352053" fg:w="1003009"/><text x="19.3989%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (1,003,009 samples, 0.16%)</title><rect x="19.1489%" y="293" width="0.1637%" height="15" fill="rgb(234,217,39)" fg:x="117352053" fg:w="1003009"/><text x="19.3989%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (1,003,009 samples, 0.16%)</title><rect x="19.1489%" y="277" width="0.1637%" height="15" fill="rgb(207,178,40)" fg:x="117352053" fg:w="1003009"/><text x="19.3989%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,003,009 samples, 0.16%)</title><rect x="19.1489%" y="261" width="0.1637%" height="15" fill="rgb(221,136,13)" fg:x="117352053" fg:w="1003009"/><text x="19.3989%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,003,009 samples, 0.16%)</title><rect x="19.1489%" y="245" width="0.1637%" height="15" fill="rgb(249,199,10)" fg:x="117352053" fg:w="1003009"/><text x="19.3989%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (1,003,009 samples, 0.16%)</title><rect x="19.1489%" y="229" width="0.1637%" height="15" fill="rgb(249,222,13)" fg:x="117352053" fg:w="1003009"/><text x="19.3989%" y="239.50"></text></g><g><title>__GI___libc_free (1,003,009 samples, 0.16%)</title><rect x="19.1489%" y="213" width="0.1637%" height="15" fill="rgb(244,185,38)" fg:x="117352053" fg:w="1003009"/><text x="19.3989%" y="223.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3,009,027 samples, 0.49%)</title><rect x="21.6039%" y="341" width="0.4910%" height="15" fill="rgb(236,202,9)" fg:x="132397188" fg:w="3009027"/><text x="21.8539%" y="351.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (2,006,018 samples, 0.33%)</title><rect x="21.7676%" y="325" width="0.3273%" height="15" fill="rgb(250,229,37)" fg:x="133400197" fg:w="2006018"/><text x="22.0176%" y="335.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (2,006,018 samples, 0.33%)</title><rect x="21.7676%" y="309" width="0.3273%" height="15" fill="rgb(206,174,23)" fg:x="133400197" fg:w="2006018"/><text x="22.0176%" y="319.50"></text></g><g><title>asm_sysvec_call_function_single (1,003,009 samples, 0.16%)</title><rect x="21.9313%" y="293" width="0.1637%" height="15" fill="rgb(211,33,43)" fg:x="134403206" fg:w="1003009"/><text x="22.1813%" y="303.50"></text></g><g><title>sysvec_call_function_single (1,003,009 samples, 0.16%)</title><rect x="21.9313%" y="277" width="0.1637%" height="15" fill="rgb(245,58,50)" fg:x="134403206" fg:w="1003009"/><text x="22.1813%" y="287.50"></text></g><g><title>irqentry_exit (1,003,009 samples, 0.16%)</title><rect x="21.9313%" y="261" width="0.1637%" height="15" fill="rgb(244,68,36)" fg:x="134403206" fg:w="1003009"/><text x="22.1813%" y="271.50"></text></g><g><title>irqentry_exit_to_user_mode (1,003,009 samples, 0.16%)</title><rect x="21.9313%" y="245" width="0.1637%" height="15" fill="rgb(232,229,15)" fg:x="134403206" fg:w="1003009"/><text x="22.1813%" y="255.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (4,012,036 samples, 0.65%)</title><rect x="22.0949%" y="341" width="0.6547%" height="15" fill="rgb(254,30,23)" fg:x="135406215" fg:w="4012036"/><text x="22.3449%" y="351.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (4,012,036 samples, 0.65%)</title><rect x="22.0949%" y="325" width="0.6547%" height="15" fill="rgb(235,160,14)" fg:x="135406215" fg:w="4012036"/><text x="22.3449%" y="335.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (4,012,036 samples, 0.65%)</title><rect x="22.0949%" y="309" width="0.6547%" height="15" fill="rgb(212,155,44)" fg:x="135406215" fg:w="4012036"/><text x="22.3449%" y="319.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (4,012,036 samples, 0.65%)</title><rect x="22.0949%" y="293" width="0.6547%" height="15" fill="rgb(226,2,50)" fg:x="135406215" fg:w="4012036"/><text x="22.3449%" y="303.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1,003,009 samples, 0.16%)</title><rect x="22.7496%" y="341" width="0.1637%" height="15" fill="rgb(234,177,6)" fg:x="139418251" fg:w="1003009"/><text x="22.9996%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (1,003,009 samples, 0.16%)</title><rect x="22.7496%" y="325" width="0.1637%" height="15" fill="rgb(217,24,9)" fg:x="139418251" fg:w="1003009"/><text x="22.9996%" y="335.50"></text></g><g><title>irqentry_exit (1,003,009 samples, 0.16%)</title><rect x="22.7496%" y="309" width="0.1637%" height="15" fill="rgb(220,13,46)" fg:x="139418251" fg:w="1003009"/><text x="22.9996%" y="319.50"></text></g><g><title>irqentry_exit_to_user_mode (1,003,009 samples, 0.16%)</title><rect x="22.7496%" y="293" width="0.1637%" height="15" fill="rgb(239,221,27)" fg:x="139418251" fg:w="1003009"/><text x="22.9996%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (2,006,018 samples, 0.33%)</title><rect x="22.9133%" y="341" width="0.3273%" height="15" fill="rgb(222,198,25)" fg:x="140421260" fg:w="2006018"/><text x="23.1633%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut_checked (2,006,018 samples, 0.33%)</title><rect x="22.9133%" y="325" width="0.3273%" height="15" fill="rgb(211,99,13)" fg:x="140421260" fg:w="2006018"/><text x="23.1633%" y="335.50"></text></g><g><title>asm_sysvec_reschedule_ipi (2,006,018 samples, 0.33%)</title><rect x="22.9133%" y="309" width="0.3273%" height="15" fill="rgb(232,111,31)" fg:x="140421260" fg:w="2006018"/><text x="23.1633%" y="319.50"></text></g><g><title>sysvec_reschedule_ipi (2,006,018 samples, 0.33%)</title><rect x="22.9133%" y="293" width="0.3273%" height="15" fill="rgb(245,82,37)" fg:x="140421260" fg:w="2006018"/><text x="23.1633%" y="303.50"></text></g><g><title>irqentry_exit (2,006,018 samples, 0.33%)</title><rect x="22.9133%" y="277" width="0.3273%" height="15" fill="rgb(227,149,46)" fg:x="140421260" fg:w="2006018"/><text x="23.1633%" y="287.50"></text></g><g><title>irqentry_exit_to_user_mode (2,006,018 samples, 0.33%)</title><rect x="22.9133%" y="261" width="0.3273%" height="15" fill="rgb(218,36,50)" fg:x="140421260" fg:w="2006018"/><text x="23.1633%" y="271.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1,003,009 samples, 0.16%)</title><rect x="23.0769%" y="245" width="0.1637%" height="15" fill="rgb(226,80,48)" fg:x="141424269" fg:w="1003009"/><text x="23.3269%" y="255.50"></text></g><g><title>sysvec_apic_timer_interrupt (1,003,009 samples, 0.16%)</title><rect x="23.0769%" y="229" width="0.1637%" height="15" fill="rgb(238,224,15)" fg:x="141424269" fg:w="1003009"/><text x="23.3269%" y="239.50"></text></g><g><title>irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="23.0769%" y="213" width="0.1637%" height="15" fill="rgb(241,136,10)" fg:x="141424269" fg:w="1003009"/><text x="23.3269%" y="223.50"></text></g><g><title>__irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="23.0769%" y="197" width="0.1637%" height="15" fill="rgb(208,32,45)" fg:x="141424269" fg:w="1003009"/><text x="23.3269%" y="207.50"></text></g><g><title>handle_softirqs (1,003,009 samples, 0.16%)</title><rect x="23.0769%" y="181" width="0.1637%" height="15" fill="rgb(207,135,9)" fg:x="141424269" fg:w="1003009"/><text x="23.3269%" y="191.50"></text></g><g><title>irq_exit_rcu (9,027,081 samples, 1.47%)</title><rect x="59.9018%" y="261" width="1.4730%" height="15" fill="rgb(206,86,44)" fg:x="367101294" fg:w="9027081"/><text x="60.1518%" y="271.50"></text></g><g><title>__irq_exit_rcu (9,027,081 samples, 1.47%)</title><rect x="59.9018%" y="245" width="1.4730%" height="15" fill="rgb(245,177,15)" fg:x="367101294" fg:w="9027081"/><text x="60.1518%" y="255.50"></text></g><g><title>handle_softirqs (9,027,081 samples, 1.47%)</title><rect x="59.9018%" y="229" width="1.4730%" height="15" fill="rgb(206,64,50)" fg:x="367101294" fg:w="9027081"/><text x="60.1518%" y="239.50"></text></g><g><title>rcu_core_si (1,003,009 samples, 0.16%)</title><rect x="61.2111%" y="213" width="0.1637%" height="15" fill="rgb(234,36,40)" fg:x="375125366" fg:w="1003009"/><text x="61.4611%" y="223.50"></text></g><g><title>rcu_core (1,003,009 samples, 0.16%)</title><rect x="61.2111%" y="197" width="0.1637%" height="15" fill="rgb(213,64,8)" fg:x="375125366" fg:w="1003009"/><text x="61.4611%" y="207.50"></text></g><g><title>rcu_nocb_unlock_irqrestore.part.0 (1,003,009 samples, 0.16%)</title><rect x="61.2111%" y="181" width="0.1637%" height="15" fill="rgb(210,75,36)" fg:x="375125366" fg:w="1003009"/><text x="61.4611%" y="191.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (11,033,099 samples, 1.80%)</title><rect x="59.9018%" y="293" width="1.8003%" height="15" fill="rgb(229,88,21)" fg:x="367101294" fg:w="11033099"/><text x="60.1518%" y="303.50">a..</text></g><g><title>sysvec_apic_timer_interrupt (11,033,099 samples, 1.80%)</title><rect x="59.9018%" y="277" width="1.8003%" height="15" fill="rgb(252,204,47)" fg:x="367101294" fg:w="11033099"/><text x="60.1518%" y="287.50">s..</text></g><g><title>irqentry_exit (2,006,018 samples, 0.33%)</title><rect x="61.3748%" y="261" width="0.3273%" height="15" fill="rgb(208,77,27)" fg:x="376128375" fg:w="2006018"/><text x="61.6248%" y="271.50"></text></g><g><title>irqentry_exit_to_user_mode (2,006,018 samples, 0.33%)</title><rect x="61.3748%" y="245" width="0.3273%" height="15" fill="rgb(221,76,26)" fg:x="376128375" fg:w="2006018"/><text x="61.6248%" y="255.50"></text></g><g><title>schedule (2,006,018 samples, 0.33%)</title><rect x="61.3748%" y="229" width="0.3273%" height="15" fill="rgb(225,139,18)" fg:x="376128375" fg:w="2006018"/><text x="61.6248%" y="239.50"></text></g><g><title>__schedule (2,006,018 samples, 0.33%)</title><rect x="61.3748%" y="213" width="0.3273%" height="15" fill="rgb(230,137,11)" fg:x="376128375" fg:w="2006018"/><text x="61.6248%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (2,006,018 samples, 0.33%)</title><rect x="61.3748%" y="197" width="0.3273%" height="15" fill="rgb(212,28,1)" fg:x="376128375" fg:w="2006018"/><text x="61.6248%" y="207.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1,003,009 samples, 0.16%)</title><rect x="62.5205%" y="229" width="0.1637%" height="15" fill="rgb(248,164,17)" fg:x="383149438" fg:w="1003009"/><text x="62.7705%" y="239.50"></text></g><g><title>sysvec_apic_timer_interrupt (1,003,009 samples, 0.16%)</title><rect x="62.5205%" y="213" width="0.1637%" height="15" fill="rgb(222,171,42)" fg:x="383149438" fg:w="1003009"/><text x="62.7705%" y="223.50"></text></g><g><title>irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="62.5205%" y="197" width="0.1637%" height="15" fill="rgb(243,84,45)" fg:x="383149438" fg:w="1003009"/><text x="62.7705%" y="207.50"></text></g><g><title>__irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="62.5205%" y="181" width="0.1637%" height="15" fill="rgb(252,49,23)" fg:x="383149438" fg:w="1003009"/><text x="62.7705%" y="191.50"></text></g><g><title>handle_softirqs (1,003,009 samples, 0.16%)</title><rect x="62.5205%" y="165" width="0.1637%" height="15" fill="rgb(215,19,7)" fg:x="383149438" fg:w="1003009"/><text x="62.7705%" y="175.50"></text></g><g><title>asm_sysvec_call_function_single (9,027,081 samples, 1.47%)</title><rect x="61.7021%" y="293" width="1.4730%" height="15" fill="rgb(238,81,41)" fg:x="378134393" fg:w="9027081"/><text x="61.9521%" y="303.50"></text></g><g><title>sysvec_call_function_single (9,027,081 samples, 1.47%)</title><rect x="61.7021%" y="277" width="1.4730%" height="15" fill="rgb(210,199,37)" fg:x="378134393" fg:w="9027081"/><text x="61.9521%" y="287.50"></text></g><g><title>irqentry_exit (9,027,081 samples, 1.47%)</title><rect x="61.7021%" y="261" width="1.4730%" height="15" fill="rgb(244,192,49)" fg:x="378134393" fg:w="9027081"/><text x="61.9521%" y="271.50"></text></g><g><title>irqentry_exit_to_user_mode (9,027,081 samples, 1.47%)</title><rect x="61.7021%" y="245" width="1.4730%" height="15" fill="rgb(226,211,11)" fg:x="378134393" fg:w="9027081"/><text x="61.9521%" y="255.50"></text></g><g><title>schedule (3,009,027 samples, 0.49%)</title><rect x="62.6841%" y="229" width="0.4910%" height="15" fill="rgb(236,162,54)" fg:x="384152447" fg:w="3009027"/><text x="62.9341%" y="239.50"></text></g><g><title>__schedule (3,009,027 samples, 0.49%)</title><rect x="62.6841%" y="213" width="0.4910%" height="15" fill="rgb(220,229,9)" fg:x="384152447" fg:w="3009027"/><text x="62.9341%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (3,009,027 samples, 0.49%)</title><rect x="62.6841%" y="197" width="0.4910%" height="15" fill="rgb(250,87,22)" fg:x="384152447" fg:w="3009027"/><text x="62.9341%" y="207.50"></text></g><g><title>asm_sysvec_irq_work (1,003,009 samples, 0.16%)</title><rect x="63.1751%" y="293" width="0.1637%" height="15" fill="rgb(239,43,17)" fg:x="387161474" fg:w="1003009"/><text x="63.4251%" y="303.50"></text></g><g><title>sysvec_irq_work (1,003,009 samples, 0.16%)</title><rect x="63.1751%" y="277" width="0.1637%" height="15" fill="rgb(231,177,25)" fg:x="387161474" fg:w="1003009"/><text x="63.4251%" y="287.50"></text></g><g><title>irqentry_exit (1,003,009 samples, 0.16%)</title><rect x="63.1751%" y="261" width="0.1637%" height="15" fill="rgb(219,179,1)" fg:x="387161474" fg:w="1003009"/><text x="63.4251%" y="271.50"></text></g><g><title>irqentry_exit_to_user_mode (1,003,009 samples, 0.16%)</title><rect x="63.1751%" y="245" width="0.1637%" height="15" fill="rgb(238,219,53)" fg:x="387161474" fg:w="1003009"/><text x="63.4251%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (221,664,989 samples, 36.17%)</title><rect x="27.3322%" y="325" width="36.1702%" height="15" fill="rgb(232,167,36)" fg:x="167502503" fg:w="221664989"/><text x="27.5822%" y="335.50">&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits:..</text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (221,664,989 samples, 36.17%)</title><rect x="27.3322%" y="309" width="36.1702%" height="15" fill="rgb(244,19,51)" fg:x="167502503" fg:w="221664989"/><text x="27.5822%" y="319.50">&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapter..</text></g><g><title>asm_sysvec_reschedule_ipi (1,003,009 samples, 0.16%)</title><rect x="63.3388%" y="293" width="0.1637%" height="15" fill="rgb(224,6,22)" fg:x="388164483" fg:w="1003009"/><text x="63.5888%" y="303.50"></text></g><g><title>sysvec_reschedule_ipi (1,003,009 samples, 0.16%)</title><rect x="63.3388%" y="277" width="0.1637%" height="15" fill="rgb(224,145,5)" fg:x="388164483" fg:w="1003009"/><text x="63.5888%" y="287.50"></text></g><g><title>irqentry_exit (1,003,009 samples, 0.16%)</title><rect x="63.3388%" y="261" width="0.1637%" height="15" fill="rgb(234,130,49)" fg:x="388164483" fg:w="1003009"/><text x="63.5888%" y="271.50"></text></g><g><title>irqentry_exit_to_user_mode (1,003,009 samples, 0.16%)</title><rect x="63.3388%" y="245" width="0.1637%" height="15" fill="rgb(254,6,2)" fg:x="388164483" fg:w="1003009"/><text x="63.5888%" y="255.50"></text></g><g><title>irq_exit_rcu (7,021,063 samples, 1.15%)</title><rect x="63.5025%" y="293" width="1.1457%" height="15" fill="rgb(208,96,46)" fg:x="389167492" fg:w="7021063"/><text x="63.7525%" y="303.50"></text></g><g><title>__irq_exit_rcu (7,021,063 samples, 1.15%)</title><rect x="63.5025%" y="277" width="1.1457%" height="15" fill="rgb(239,3,39)" fg:x="389167492" fg:w="7021063"/><text x="63.7525%" y="287.50"></text></g><g><title>handle_softirqs (7,021,063 samples, 1.15%)</title><rect x="63.5025%" y="261" width="1.1457%" height="15" fill="rgb(233,210,1)" fg:x="389167492" fg:w="7021063"/><text x="63.7525%" y="271.50"></text></g><g><title>rcu_core_si (3,009,027 samples, 0.49%)</title><rect x="64.1571%" y="245" width="0.4910%" height="15" fill="rgb(244,137,37)" fg:x="393179528" fg:w="3009027"/><text x="64.4071%" y="255.50"></text></g><g><title>rcu_core (3,009,027 samples, 0.49%)</title><rect x="64.1571%" y="229" width="0.4910%" height="15" fill="rgb(240,136,2)" fg:x="393179528" fg:w="3009027"/><text x="64.4071%" y="239.50"></text></g><g><title>rcu_report_qs_rdp (3,009,027 samples, 0.49%)</title><rect x="64.1571%" y="213" width="0.4910%" height="15" fill="rgb(239,18,37)" fg:x="393179528" fg:w="3009027"/><text x="64.4071%" y="223.50"></text></g><g><title>rcu_report_qs_rnp (3,009,027 samples, 0.49%)</title><rect x="64.1571%" y="197" width="0.4910%" height="15" fill="rgb(218,185,22)" fg:x="393179528" fg:w="3009027"/><text x="64.4071%" y="207.50"></text></g><g><title>rcu_gp_kthread_wake (3,009,027 samples, 0.49%)</title><rect x="64.1571%" y="181" width="0.4910%" height="15" fill="rgb(225,218,4)" fg:x="393179528" fg:w="3009027"/><text x="64.4071%" y="191.50"></text></g><g><title>swake_up_one_online (3,009,027 samples, 0.49%)</title><rect x="64.1571%" y="165" width="0.4910%" height="15" fill="rgb(230,182,32)" fg:x="393179528" fg:w="3009027"/><text x="64.4071%" y="175.50"></text></g><g><title>swake_up_one (3,009,027 samples, 0.49%)</title><rect x="64.1571%" y="149" width="0.4910%" height="15" fill="rgb(242,56,43)" fg:x="393179528" fg:w="3009027"/><text x="64.4071%" y="159.50"></text></g><g><title>_raw_spin_unlock_irqrestore (3,009,027 samples, 0.49%)</title><rect x="64.1571%" y="133" width="0.4910%" height="15" fill="rgb(233,99,24)" fg:x="393179528" fg:w="3009027"/><text x="64.4071%" y="143.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (8,024,072 samples, 1.31%)</title><rect x="63.5025%" y="325" width="1.3093%" height="15" fill="rgb(234,209,42)" fg:x="389167492" fg:w="8024072"/><text x="63.7525%" y="335.50"></text></g><g><title>sysvec_apic_timer_interrupt (8,024,072 samples, 1.31%)</title><rect x="63.5025%" y="309" width="1.3093%" height="15" fill="rgb(227,7,12)" fg:x="389167492" fg:w="8024072"/><text x="63.7525%" y="319.50"></text></g><g><title>irqentry_exit (1,003,009 samples, 0.16%)</title><rect x="64.6481%" y="293" width="0.1637%" height="15" fill="rgb(245,203,43)" fg:x="396188555" fg:w="1003009"/><text x="64.8981%" y="303.50"></text></g><g><title>irqentry_exit_to_user_mode (1,003,009 samples, 0.16%)</title><rect x="64.6481%" y="277" width="0.1637%" height="15" fill="rgb(238,205,33)" fg:x="396188555" fg:w="1003009"/><text x="64.8981%" y="287.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_ww (11,033,099 samples, 1.80%)</title><rect x="64.8118%" y="325" width="1.8003%" height="15" fill="rgb(231,56,7)" fg:x="397191564" fg:w="11033099"/><text x="65.0618%" y="335.50">n..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (11,033,099 samples, 1.80%)</title><rect x="64.8118%" y="309" width="1.8003%" height="15" fill="rgb(244,186,29)" fg:x="397191564" fg:w="11033099"/><text x="65.0618%" y="319.50">c..</text></g><g><title>asm_sysvec_call_function_single (1,003,009 samples, 0.16%)</title><rect x="66.4484%" y="293" width="0.1637%" height="15" fill="rgb(234,111,31)" fg:x="407221654" fg:w="1003009"/><text x="66.6984%" y="303.50"></text></g><g><title>sysvec_call_function_single (1,003,009 samples, 0.16%)</title><rect x="66.4484%" y="277" width="0.1637%" height="15" fill="rgb(241,149,10)" fg:x="407221654" fg:w="1003009"/><text x="66.6984%" y="287.50"></text></g><g><title>irqentry_exit (1,003,009 samples, 0.16%)</title><rect x="66.4484%" y="261" width="0.1637%" height="15" fill="rgb(249,206,44)" fg:x="407221654" fg:w="1003009"/><text x="66.6984%" y="271.50"></text></g><g><title>irqentry_exit_to_user_mode (1,003,009 samples, 0.16%)</title><rect x="66.4484%" y="245" width="0.1637%" height="15" fill="rgb(251,153,30)" fg:x="407221654" fg:w="1003009"/><text x="66.6984%" y="255.50"></text></g><g><title>irq_exit_rcu (17,051,153 samples, 2.78%)</title><rect x="93.2897%" y="277" width="2.7823%" height="15" fill="rgb(239,152,38)" fg:x="571715130" fg:w="17051153"/><text x="93.5397%" y="287.50">ir..</text></g><g><title>__irq_exit_rcu (17,051,153 samples, 2.78%)</title><rect x="93.2897%" y="261" width="2.7823%" height="15" fill="rgb(249,139,47)" fg:x="571715130" fg:w="17051153"/><text x="93.5397%" y="271.50">__..</text></g><g><title>handle_softirqs (17,051,153 samples, 2.78%)</title><rect x="93.2897%" y="245" width="2.7823%" height="15" fill="rgb(244,64,35)" fg:x="571715130" fg:w="17051153"/><text x="93.5397%" y="255.50">ha..</text></g><g><title>asm_sysvec_apic_timer_interrupt (19,057,171 samples, 3.11%)</title><rect x="93.2897%" y="309" width="3.1097%" height="15" fill="rgb(216,46,15)" fg:x="571715130" fg:w="19057171"/><text x="93.5397%" y="319.50">asm..</text></g><g><title>sysvec_apic_timer_interrupt (19,057,171 samples, 3.11%)</title><rect x="93.2897%" y="293" width="3.1097%" height="15" fill="rgb(250,74,19)" fg:x="571715130" fg:w="19057171"/><text x="93.5397%" y="303.50">sys..</text></g><g><title>irqentry_exit (2,006,018 samples, 0.33%)</title><rect x="96.0720%" y="277" width="0.3273%" height="15" fill="rgb(249,42,33)" fg:x="588766283" fg:w="2006018"/><text x="96.3220%" y="287.50"></text></g><g><title>irqentry_exit_to_user_mode (2,006,018 samples, 0.33%)</title><rect x="96.0720%" y="261" width="0.3273%" height="15" fill="rgb(242,149,17)" fg:x="588766283" fg:w="2006018"/><text x="96.3220%" y="271.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1,003,009 samples, 0.16%)</title><rect x="96.2357%" y="245" width="0.1637%" height="15" fill="rgb(244,29,21)" fg:x="589769292" fg:w="1003009"/><text x="96.4857%" y="255.50"></text></g><g><title>sysvec_apic_timer_interrupt (1,003,009 samples, 0.16%)</title><rect x="96.2357%" y="229" width="0.1637%" height="15" fill="rgb(220,130,37)" fg:x="589769292" fg:w="1003009"/><text x="96.4857%" y="239.50"></text></g><g><title>irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="96.2357%" y="213" width="0.1637%" height="15" fill="rgb(211,67,2)" fg:x="589769292" fg:w="1003009"/><text x="96.4857%" y="223.50"></text></g><g><title>__irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="96.2357%" y="197" width="0.1637%" height="15" fill="rgb(235,68,52)" fg:x="589769292" fg:w="1003009"/><text x="96.4857%" y="207.50"></text></g><g><title>handle_softirqs (1,003,009 samples, 0.16%)</title><rect x="96.2357%" y="181" width="0.1637%" height="15" fill="rgb(246,142,3)" fg:x="589769292" fg:w="1003009"/><text x="96.4857%" y="191.50"></text></g><g><title>irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="96.3993%" y="277" width="0.1637%" height="15" fill="rgb(241,25,7)" fg:x="590772301" fg:w="1003009"/><text x="96.6493%" y="287.50"></text></g><g><title>__irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="96.3993%" y="261" width="0.1637%" height="15" fill="rgb(242,119,39)" fg:x="590772301" fg:w="1003009"/><text x="96.6493%" y="271.50"></text></g><g><title>handle_softirqs (1,003,009 samples, 0.16%)</title><rect x="96.3993%" y="245" width="0.1637%" height="15" fill="rgb(241,98,45)" fg:x="590772301" fg:w="1003009"/><text x="96.6493%" y="255.50"></text></g><g><title>num_bigint_dig::biguint::monty::add_mul_vvw (457,372,104 samples, 74.63%)</title><rect x="23.2406%" y="341" width="74.6318%" height="15" fill="rgb(254,28,30)" fg:x="142427278" fg:w="457372104"/><text x="23.4906%" y="351.50">num_bigint_dig::biguint::monty::add_mul_vvw</text></g><g><title>num_bigint_dig::biguint::monty::mul_add_www (191,574,719 samples, 31.26%)</title><rect x="66.6121%" y="325" width="31.2602%" height="15" fill="rgb(241,142,54)" fg:x="408224663" fg:w="191574719"/><text x="66.8621%" y="335.50">num_bigint_dig::biguint::monty::mul_add_www</text></g><g><title>asm_sysvec_call_function_single (9,027,081 samples, 1.47%)</title><rect x="96.3993%" y="309" width="1.4730%" height="15" fill="rgb(222,85,15)" fg:x="590772301" fg:w="9027081"/><text x="96.6493%" y="319.50"></text></g><g><title>sysvec_call_function_single (9,027,081 samples, 1.47%)</title><rect x="96.3993%" y="293" width="1.4730%" height="15" fill="rgb(210,85,47)" fg:x="590772301" fg:w="9027081"/><text x="96.6493%" y="303.50"></text></g><g><title>irqentry_exit (8,024,072 samples, 1.31%)</title><rect x="96.5630%" y="277" width="1.3093%" height="15" fill="rgb(224,206,25)" fg:x="591775310" fg:w="8024072"/><text x="96.8130%" y="287.50"></text></g><g><title>irqentry_exit_to_user_mode (8,024,072 samples, 1.31%)</title><rect x="96.5630%" y="261" width="1.3093%" height="15" fill="rgb(243,201,19)" fg:x="591775310" fg:w="8024072"/><text x="96.8130%" y="271.50"></text></g><g><title>schedule (3,009,027 samples, 0.49%)</title><rect x="97.3813%" y="245" width="0.4910%" height="15" fill="rgb(236,59,4)" fg:x="596790355" fg:w="3009027"/><text x="97.6313%" y="255.50"></text></g><g><title>__schedule (3,009,027 samples, 0.49%)</title><rect x="97.3813%" y="229" width="0.4910%" height="15" fill="rgb(254,179,45)" fg:x="596790355" fg:w="3009027"/><text x="97.6313%" y="239.50"></text></g><g><title>finish_task_switch.isra.0 (3,009,027 samples, 0.49%)</title><rect x="97.3813%" y="213" width="0.4910%" height="15" fill="rgb(226,14,10)" fg:x="596790355" fg:w="3009027"/><text x="97.6313%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.33%)</title><rect x="98.1997%" y="325" width="0.3273%" height="15" fill="rgb(244,27,41)" fg:x="601805400" fg:w="2006018"/><text x="98.4497%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,006,018 samples, 0.33%)</title><rect x="98.1997%" y="309" width="0.3273%" height="15" fill="rgb(235,35,32)" fg:x="601805400" fg:w="2006018"/><text x="98.4497%" y="319.50"></text></g><g><title>num_bigint_dig::biguint::monty::sub_vv (6,018,054 samples, 0.98%)</title><rect x="97.8723%" y="341" width="0.9820%" height="15" fill="rgb(218,68,31)" fg:x="599799382" fg:w="6018054"/><text x="98.1223%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (2,006,018 samples, 0.33%)</title><rect x="98.5270%" y="325" width="0.3273%" height="15" fill="rgb(207,120,37)" fg:x="603811418" fg:w="2006018"/><text x="98.7770%" y="335.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1,003,009 samples, 0.16%)</title><rect x="98.6907%" y="309" width="0.1637%" height="15" fill="rgb(227,98,0)" fg:x="604814427" fg:w="1003009"/><text x="98.9407%" y="319.50"></text></g><g><title>sysvec_apic_timer_interrupt (1,003,009 samples, 0.16%)</title><rect x="98.6907%" y="293" width="0.1637%" height="15" fill="rgb(207,7,3)" fg:x="604814427" fg:w="1003009"/><text x="98.9407%" y="303.50"></text></g><g><title>irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="98.6907%" y="277" width="0.1637%" height="15" fill="rgb(206,98,19)" fg:x="604814427" fg:w="1003009"/><text x="98.9407%" y="287.50"></text></g><g><title>__irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="98.6907%" y="261" width="0.1637%" height="15" fill="rgb(217,5,26)" fg:x="604814427" fg:w="1003009"/><text x="98.9407%" y="271.50"></text></g><g><title>handle_softirqs (1,003,009 samples, 0.16%)</title><rect x="98.6907%" y="245" width="0.1637%" height="15" fill="rgb(235,190,38)" fg:x="604814427" fg:w="1003009"/><text x="98.9407%" y="255.50"></text></g><g><title>core::ptr::write (4,012,036 samples, 0.65%)</title><rect x="98.8543%" y="309" width="0.6547%" height="15" fill="rgb(247,86,24)" fg:x="605817436" fg:w="4012036"/><text x="99.1043%" y="319.50"></text></g><g><title>asm_sysvec_reschedule_ipi (2,006,018 samples, 0.33%)</title><rect x="99.1817%" y="293" width="0.3273%" height="15" fill="rgb(205,101,16)" fg:x="607823454" fg:w="2006018"/><text x="99.4317%" y="303.50"></text></g><g><title>sysvec_reschedule_ipi (2,006,018 samples, 0.33%)</title><rect x="99.1817%" y="277" width="0.3273%" height="15" fill="rgb(246,168,33)" fg:x="607823454" fg:w="2006018"/><text x="99.4317%" y="287.50"></text></g><g><title>irqentry_exit (2,006,018 samples, 0.33%)</title><rect x="99.1817%" y="261" width="0.3273%" height="15" fill="rgb(231,114,1)" fg:x="607823454" fg:w="2006018"/><text x="99.4317%" y="271.50"></text></g><g><title>irqentry_exit_to_user_mode (2,006,018 samples, 0.33%)</title><rect x="99.1817%" y="245" width="0.3273%" height="15" fill="rgb(207,184,53)" fg:x="607823454" fg:w="2006018"/><text x="99.4317%" y="255.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1,003,009 samples, 0.16%)</title><rect x="99.3453%" y="229" width="0.1637%" height="15" fill="rgb(224,95,51)" fg:x="608826463" fg:w="1003009"/><text x="99.5953%" y="239.50"></text></g><g><title>sysvec_apic_timer_interrupt (1,003,009 samples, 0.16%)</title><rect x="99.3453%" y="213" width="0.1637%" height="15" fill="rgb(212,188,45)" fg:x="608826463" fg:w="1003009"/><text x="99.5953%" y="223.50"></text></g><g><title>irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="99.3453%" y="197" width="0.1637%" height="15" fill="rgb(223,154,38)" fg:x="608826463" fg:w="1003009"/><text x="99.5953%" y="207.50"></text></g><g><title>__irq_exit_rcu (1,003,009 samples, 0.16%)</title><rect x="99.3453%" y="181" width="0.1637%" height="15" fill="rgb(251,22,52)" fg:x="608826463" fg:w="1003009"/><text x="99.5953%" y="191.50"></text></g><g><title>handle_softirqs (1,003,009 samples, 0.16%)</title><rect x="99.3453%" y="165" width="0.1637%" height="15" fill="rgb(229,209,22)" fg:x="608826463" fg:w="1003009"/><text x="99.5953%" y="175.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::resize (5,015,045 samples, 0.82%)</title><rect x="98.8543%" y="341" width="0.8183%" height="15" fill="rgb(234,138,34)" fg:x="605817436" fg:w="5015045"/><text x="99.1043%" y="351.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (5,015,045 samples, 0.82%)</title><rect x="98.8543%" y="325" width="0.8183%" height="15" fill="rgb(212,95,11)" fg:x="605817436" fg:w="5015045"/><text x="99.1043%" y="335.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (1,003,009 samples, 0.16%)</title><rect x="99.5090%" y="309" width="0.1637%" height="15" fill="rgb(240,179,47)" fg:x="609829472" fg:w="1003009"/><text x="99.7590%" y="319.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (1,003,009 samples, 0.16%)</title><rect x="99.5090%" y="293" width="0.1637%" height="15" fill="rgb(240,163,11)" fg:x="609829472" fg:w="1003009"/><text x="99.7590%" y="303.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_grow (1,003,009 samples, 0.16%)</title><rect x="99.5090%" y="277" width="0.1637%" height="15" fill="rgb(236,37,12)" fg:x="609829472" fg:w="1003009"/><text x="99.7590%" y="287.50"></text></g><g><title>alloc::alloc::realloc (1,003,009 samples, 0.16%)</title><rect x="99.5090%" y="261" width="0.1637%" height="15" fill="rgb(232,164,16)" fg:x="609829472" fg:w="1003009"/><text x="99.7590%" y="271.50"></text></g><g><title>__GI___libc_realloc (1,003,009 samples, 0.16%)</title><rect x="99.5090%" y="245" width="0.1637%" height="15" fill="rgb(244,205,15)" fg:x="609829472" fg:w="1003009"/><text x="99.7590%" y="255.50"></text></g><g><title>all (612,838,499 samples, 100%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(223,117,47)" fg:x="0" fg:w="612838499"/><text x="0.2500%" y="767.50"></text></g><g><title>rsa-key (612,838,499 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(244,107,35)" fg:x="0" fg:w="612838499"/><text x="0.2500%" y="751.50">rsa-key</text></g><g><title>clone3 (607,823,454 samples, 99.18%)</title><rect x="0.8183%" y="725" width="99.1817%" height="15" fill="rgb(205,140,8)" fg:x="5015045" fg:w="607823454"/><text x="1.0683%" y="735.50">clone3</text></g><g><title>start_thread (607,823,454 samples, 99.18%)</title><rect x="0.8183%" y="709" width="99.1817%" height="15" fill="rgb(228,84,46)" fg:x="5015045" fg:w="607823454"/><text x="1.0683%" y="719.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (606,820,445 samples, 99.02%)</title><rect x="0.9820%" y="693" width="99.0180%" height="15" fill="rgb(254,188,9)" fg:x="6018054" fg:w="606820445"/><text x="1.2320%" y="703.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (606,820,445 samples, 99.02%)</title><rect x="0.9820%" y="677" width="99.0180%" height="15" fill="rgb(206,112,54)" fg:x="6018054" fg:w="606820445"/><text x="1.2320%" y="687.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (606,820,445 samples, 99.02%)</title><rect x="0.9820%" y="661" width="99.0180%" height="15" fill="rgb(216,84,49)" fg:x="6018054" fg:w="606820445"/><text x="1.2320%" y="671.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (606,820,445 samples, 99.02%)</title><rect x="0.9820%" y="645" width="99.0180%" height="15" fill="rgb(214,194,35)" fg:x="6018054" fg:w="606820445"/><text x="1.2320%" y="655.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (606,820,445 samples, 99.02%)</title><rect x="0.9820%" y="629" width="99.0180%" height="15" fill="rgb(249,28,3)" fg:x="6018054" fg:w="606820445"/><text x="1.2320%" y="639.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::panic::catch_unwind (606,820,445 samples, 99.02%)</title><rect x="0.9820%" y="613" width="99.0180%" height="15" fill="rgb(222,56,52)" fg:x="6018054" fg:w="606820445"/><text x="1.2320%" y="623.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (606,820,445 samples, 99.02%)</title><rect x="0.9820%" y="597" width="99.0180%" height="15" fill="rgb(245,217,50)" fg:x="6018054" fg:w="606820445"/><text x="1.2320%" y="607.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (606,820,445 samples, 99.02%)</title><rect x="0.9820%" y="581" width="99.0180%" height="15" fill="rgb(213,201,24)" fg:x="6018054" fg:w="606820445"/><text x="1.2320%" y="591.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (606,820,445 samples, 99.02%)</title><rect x="0.9820%" y="565" width="99.0180%" height="15" fill="rgb(248,116,28)" fg:x="6018054" fg:w="606820445"/><text x="1.2320%" y="575.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (606,820,445 samples, 99.02%)</title><rect x="0.9820%" y="549" width="99.0180%" height="15" fill="rgb(219,72,43)" fg:x="6018054" fg:w="606820445"/><text x="1.2320%" y="559.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (606,820,445 samples, 99.02%)</title><rect x="0.9820%" y="533" width="99.0180%" height="15" fill="rgb(209,138,14)" fg:x="6018054" fg:w="606820445"/><text x="1.2320%" y="543.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>rsa_key::main::_{{closure}} (606,820,445 samples, 99.02%)</title><rect x="0.9820%" y="517" width="99.0180%" height="15" fill="rgb(222,18,33)" fg:x="6018054" fg:w="606820445"/><text x="1.2320%" y="527.50">rsa_key::main::_{{closure}}</text></g><g><title>rsa_key::rsa_key_4096 (509,528,572 samples, 83.14%)</title><rect x="16.8576%" y="501" width="83.1424%" height="15" fill="rgb(213,199,7)" fg:x="103309927" fg:w="509528572"/><text x="17.1076%" y="511.50">rsa_key::rsa_key_4096</text></g><g><title>rsa::key::RsaPrivateKey::new (509,528,572 samples, 83.14%)</title><rect x="16.8576%" y="485" width="83.1424%" height="15" fill="rgb(250,110,10)" fg:x="103309927" fg:w="509528572"/><text x="17.1076%" y="495.50">rsa::key::RsaPrivateKey::new</text></g><g><title>rsa::key::RsaPrivateKey::new_with_exp (509,528,572 samples, 83.14%)</title><rect x="16.8576%" y="469" width="83.1424%" height="15" fill="rgb(248,123,6)" fg:x="103309927" fg:w="509528572"/><text x="17.1076%" y="479.50">rsa::key::RsaPrivateKey::new_with_exp</text></g><g><title>rsa::algorithms::generate::generate_multi_prime_key_with_exp (509,528,572 samples, 83.14%)</title><rect x="16.8576%" y="453" width="83.1424%" height="15" fill="rgb(206,91,31)" fg:x="103309927" fg:w="509528572"/><text x="17.1076%" y="463.50">rsa::algorithms::generate::generate_multi_prime_key_with_exp</text></g><g><title>&lt;R as num_bigint_dig::bigrand::RandPrime&gt;::gen_prime (509,528,572 samples, 83.14%)</title><rect x="16.8576%" y="437" width="83.1424%" height="15" fill="rgb(211,154,13)" fg:x="103309927" fg:w="509528572"/><text x="17.1076%" y="447.50">&lt;R as num_bigint_dig::bigrand::RandPrime&gt;::gen_prime</text></g><g><title>num_bigint_dig::prime::probably_prime (509,528,572 samples, 83.14%)</title><rect x="16.8576%" y="421" width="83.1424%" height="15" fill="rgb(225,148,7)" fg:x="103309927" fg:w="509528572"/><text x="17.1076%" y="431.50">num_bigint_dig::prime::probably_prime</text></g><g><title>num_bigint_dig::prime::probably_prime_miller_rabin (496,489,455 samples, 81.01%)</title><rect x="18.9853%" y="405" width="81.0147%" height="15" fill="rgb(220,160,43)" fg:x="116349044" fg:w="496489455"/><text x="19.2353%" y="415.50">num_bigint_dig::prime::probably_prime_miller_rabin</text></g><g><title>num_bigint_dig::biguint::BigUint::modpow (496,489,455 samples, 81.01%)</title><rect x="18.9853%" y="389" width="81.0147%" height="15" fill="rgb(213,52,39)" fg:x="116349044" fg:w="496489455"/><text x="19.2353%" y="399.50">num_bigint_dig::biguint::BigUint::modpow</text></g><g><title>num_bigint_dig::biguint::monty::monty_modpow (496,489,455 samples, 81.01%)</title><rect x="18.9853%" y="373" width="81.0147%" height="15" fill="rgb(243,137,7)" fg:x="116349044" fg:w="496489455"/><text x="19.2353%" y="383.50">num_bigint_dig::biguint::monty::monty_modpow</text></g><g><title>num_bigint_dig::biguint::monty::montgomery (494,483,437 samples, 80.69%)</title><rect x="19.3126%" y="357" width="80.6874%" height="15" fill="rgb(230,79,13)" fg:x="118355062" fg:w="494483437"/><text x="19.5626%" y="367.50">num_bigint_dig::biguint::monty::montgomery</text></g><g><title>smallvec::SmallVec&lt;A&gt;::truncate (2,006,018 samples, 0.33%)</title><rect x="99.6727%" y="341" width="0.3273%" height="15" fill="rgb(247,105,23)" fg:x="610832481" fg:w="2006018"/><text x="99.9227%" y="351.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (1,003,009 samples, 0.16%)</title><rect x="99.8363%" y="325" width="0.1637%" height="15" fill="rgb(223,179,41)" fg:x="611835490" fg:w="1003009"/><text x="100.0863%" y="335.50"></text></g></svg></svg>